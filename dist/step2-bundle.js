(()=>{"use strict";var n={944:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,".jtyI08TszAX0g538gAbp {\n  width: 100%;\n  background-color: #4e5ba6;\n  color: #ffffff;\n  padding: 1.4rem;\n  padding-left: 10.6rem;\n}\n\n.QsUC7CqXFGR6mGey8NOZ {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  margin: 6.8rem auto;\n  padding: 3.1rem 1.5rem;\n  max-width: 41.4rem;\n  border-radius: 0.3rem;\n  height: 72.7rem;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.RdUvZv50NwqW7Cnfq26z {\n  width: 38.2rem;\n  height: 3.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.FiTxQHxnhLr6mO4a54Gd {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  color: #4e5ba6;\n  width: 100%;\n  height: 8rem;\n}\n","",{version:3,sources:["webpack://./src/web/components/LottoApp/LottoApp.module.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,yBAAyB;EACzB,cAAc;EACd,eAAe;EACf,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,WAAW;EACX,mBAAmB;EACnB,sBAAsB;EACtB,kBAAkB;EAClB,qBAAqB;EACrB,eAAe;EACf,qCAAqC;AACvC;;AAEA;EACE,cAAc;EACd,cAAc;EACd,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,yCAAyC;EACzC,cAAc;EACd,WAAW;EACX,YAAY;AACd",sourcesContent:[".navBar {\n  width: 100%;\n  background-color: #4e5ba6;\n  color: #ffffff;\n  padding: 1.4rem;\n  padding-left: 10.6rem;\n}\n\n.mainContainer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  margin: 6.8rem auto;\n  padding: 3.1rem 1.5rem;\n  max-width: 41.4rem;\n  border-radius: 0.3rem;\n  height: 72.7rem;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.mainTitle {\n  width: 38.2rem;\n  height: 3.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.footer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  color: #4e5ba6;\n  width: 100%;\n  height: 8rem;\n}\n"],sourceRoot:""}]),a.locals={navBar:"jtyI08TszAX0g538gAbp",mainContainer:"QsUC7CqXFGR6mGey8NOZ",mainTitle:"RdUvZv50NwqW7Cnfq26z",footer:"FiTxQHxnhLr6mO4a54Gd"};const c=a},493:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,".oOIlTIkEI_7gfEYO6vAc {\n  display: flex;\n  align-items: center;\n}\n\n.h2LC2rZLva44II6JTq17 {\n  display: block;\n  margin-left: 0.8rem;\n  margin-bottom: 0.4rem;\n}\n\n.HSabeny6TTI4r5wSKTh0 {\n  padding-bottom: 0.2em;\n  font-size: 2rem;\n}\n","",{version:3,sources:["webpack://./src/web/components/PurchasedLotto/PurchasedLotto.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,qBAAqB;EACrB,eAAe;AACjB",sourcesContent:[".purchasedLotto {\n  display: flex;\n  align-items: center;\n}\n\n.lottoNumber {\n  display: block;\n  margin-left: 0.8rem;\n  margin-bottom: 0.4rem;\n}\n\n.ticketIcon {\n  padding-bottom: 0.2em;\n  font-size: 2rem;\n}\n"],sourceRoot:""}]),a.locals={purchasedLotto:"oOIlTIkEI_7gfEYO6vAc",lottoNumber:"h2LC2rZLva44II6JTq17",ticketIcon:"HSabeny6TTI4r5wSKTh0"};const c=a},146:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"purchased-lotto-form {\n  margin-top: 2.8rem;\n}\n\npurchased-lotto-form > form {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.XojHSGowoGxAFTjKRauG {\n  margin-top: 0.4rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.YcfGd8BrOSosEMqrvZYD {\n  margin-right: 1.3rem;\n  width: 31rem;\n  border-radius: 0.4rem;\n  height: 3.6rem;\n  border: 1px solid #b4b4b4;\n  padding: 0.8rem 0rem 0.4rem 0.4rem;\n}\n\n.YcfGd8BrOSosEMqrvZYD::placeholder {\n  color: #8b8b8b;\n}\n\n.b0U0vZTLrpZ7RNehoaor {\n  width: 5.6rem;\n  height: 3.6rem;\n  background-color: #4e5ba6;\n  border-radius: 0.4rem;\n  color: #ffffff;\n}\n","",{version:3,sources:["webpack://./src/web/components/PurchasedLottoForm/PurchasedLottoForm.module.css"],names:[],mappings:"AAAA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,oBAAoB;EACpB,YAAY;EACZ,qBAAqB;EACrB,cAAc;EACd,yBAAyB;EACzB,kCAAkC;AACpC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,cAAc;EACd,yBAAyB;EACzB,qBAAqB;EACrB,cAAc;AAChB",sourcesContent:["purchased-lotto-form {\n  margin-top: 2.8rem;\n}\n\npurchased-lotto-form > form {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.inputContainer {\n  margin-top: 0.4rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.purchasedLottoPriceInput {\n  margin-right: 1.3rem;\n  width: 31rem;\n  border-radius: 0.4rem;\n  height: 3.6rem;\n  border: 1px solid #b4b4b4;\n  padding: 0.8rem 0rem 0.4rem 0.4rem;\n}\n\n.purchasedLottoPriceInput::placeholder {\n  color: #8b8b8b;\n}\n\n.purchasedButton {\n  width: 5.6rem;\n  height: 3.6rem;\n  background-color: #4e5ba6;\n  border-radius: 0.4rem;\n  color: #ffffff;\n}\n"],sourceRoot:""}]),a.locals={inputContainer:"XojHSGowoGxAFTjKRauG",purchasedLottoPriceInput:"YcfGd8BrOSosEMqrvZYD",purchasedButton:"b0U0vZTLrpZ7RNehoaor"};const c=a},497:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,".rGGw512OdyIGCd1kzMj9 {\n  margin-top: 2.8rem;\n  margin-bottom: 0.8rem;\n}\n\n.ZEO51LXsfJxCyhwaxb22 {\n  width: 100%;\n  list-style-type: none;\n}\n","",{version:3,sources:["webpack://./src/web/components/PurchasedLottoSection/PurchasedLottoSection.module.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,qBAAqB;AACvB",sourcesContent:[".purchasedMessage {\n  margin-top: 2.8rem;\n  margin-bottom: 0.8rem;\n}\n\n.purchasedLottos {\n  width: 100%;\n  list-style-type: none;\n}\n"],sourceRoot:""}]),a.locals={purchasedMessage:"rGGw512OdyIGCd1kzMj9",purchasedLottos:"ZEO51LXsfJxCyhwaxb22"};const c=a},847:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"._ibDsSU8vF00cjT1EsaK {\n  height: 20.7rem;\n  margin-top: 2.4rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.L9aB9drVH64BrC45pgKi {\n  width: 3.4rem;\n  height: 3.6rem;\n  border: 1px solid #b4b4b4;\n  border-radius: 0.4rem;\n  text-align: center;\n}\n\n.xVSFVy180nnpLrP64W0z {\n  display: flex;\n  justify-content: space-between;\n}\n\n.T4j86_9W3OtQf0oYh4Vr {\n  display: flex;\n  margin-top: 0.8rem;\n  gap: 0.8rem;\n}\n\n.lrhbEvGhTLLQo3p6QC_s {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 0.8rem;\n}\n\n.Aaq9Dm7S957zoyDpw9vt {\n  background-color: #4e5ba6;\n  color: #ffffff;\n  margin-top: 1.7rem;\n  border: none;\n  padding: 0.4rem 0;\n  border-radius: 0.4rem;\n  cursor: pointer;\n  height: 3.6rem;\n}\n","",{version:3,sources:["webpack://./src/web/components/WinningDetailForm/WinningDetailForm.module.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,cAAc;EACd,yBAAyB;EACzB,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,qBAAqB;EACrB,WAAW;AACb;;AAEA;EACE,yBAAyB;EACzB,cAAc;EACd,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,qBAAqB;EACrB,eAAe;EACf,cAAc;AAChB",sourcesContent:[".winningDetailForm {\n  height: 20.7rem;\n  margin-top: 2.4rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.numberInput {\n  width: 3.4rem;\n  height: 3.6rem;\n  border: 1px solid #b4b4b4;\n  border-radius: 0.4rem;\n  text-align: center;\n}\n\n.numbersInputContainer {\n  display: flex;\n  justify-content: space-between;\n}\n\n.winningNumberInputContainer {\n  display: flex;\n  margin-top: 0.8rem;\n  gap: 0.8rem;\n}\n\n.bonusNumberContainer {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 0.8rem;\n}\n\n.submitButton {\n  background-color: #4e5ba6;\n  color: #ffffff;\n  margin-top: 1.7rem;\n  border: none;\n  padding: 0.4rem 0;\n  border-radius: 0.4rem;\n  cursor: pointer;\n  height: 3.6rem;\n}\n"],sourceRoot:""}]),a.locals={winningDetailForm:"_ibDsSU8vF00cjT1EsaK",numberInput:"L9aB9drVH64BrC45pgKi",numbersInputContainer:"xVSFVy180nnpLrP64W0z",winningNumberInputContainer:"T4j86_9W3OtQf0oYh4Vr",bonusNumberContainer:"lrhbEvGhTLLQo3p6QC_s",submitButton:"Aaq9Dm7S957zoyDpw9vt"};const c=a},500:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"winning-statistics-modal {\n  opacity: 1;\n  visibility: visible;\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n}\n\n.PREvYxsjNh2VVrHqNSWe {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 35rem;\n  transition: top 0.25s ease;\n  height: 50rem;\n  margin: auto;\n  overflow: auto;\n  background: #fff;\n  border-radius: 0.5rem;\n  position: relative;\n  padding: 0rem 1.6rem;\n}\n\n.TCwElccGkv3BJlW5mJjQ {\n  padding: 0;\n  margin: 2rem;\n  width: 2rem;\n  position: absolute;\n  right: 0rem;\n  top: 0rem;\n  cursor: pointer;\n}\n\n.EqaZlqIJCqazwRC3kbZO {\n  stroke: #000000;\n  fill: transparent;\n  stroke-width: 5;\n}\n\nsvg {\n  display: block;\n}\n\n.TeLHp3BDSk9LMhoi9OLK {\n  text-align: center;\n}\n\n.qCVAaAm4lvJ1zo9f1PgL {\n  padding-bottom: 2rem;\n}\n\n.DVRnuxeOTJIHQPUPgrBw {\n  justify-content: center;\n  display: flex;\n}\n\n.JfIGylPsdCpl5oTgCCdV {\n  width: 31.8rem;\n  margin: 0 auto;\n  border-collapse: collapse;\n  text-align: center;\n}\n\n.hpGYP51TmdXUc9QlEnPK {\n  text-align: center;\n  margin: 3.2rem 0rem;\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n.UbUiM53V_BguVj2gxlz5 {\n  height: 3.6rem;\n  border-radius: 0.4rem;\n  background-color: #4e5ba6;\n  color: #ffffff;\n}\n\ntbody,\nthead {\n  width: 100%;\n}\n\nth,\ntd {\n  font-size: 1.5rem;\n  padding: 1rem;\n  border-bottom: 1px solid #dcdcdc;\n}\n\nth {\n  border-top: 0.1rem solid #dcdcdc;\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n","",{version:3,sources:["webpack://./src/web/components/WinningStatisticsModal/WinningStatisticsModal.module.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,mBAAmB;EACnB,aAAa;EACb,eAAe;EACf,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,8BAA8B;EAC9B,8BAA8B;EAC9B,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,gBAAgB;EAChB,0BAA0B;EAC1B,aAAa;EACb,YAAY;EACZ,cAAc;EACd,gBAAgB;EAChB,qBAAqB;EACrB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,cAAc;EACd,cAAc;EACd,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,qBAAqB;EACrB,yBAAyB;EACzB,cAAc;AAChB;;AAEA;;EAEE,WAAW;AACb;;AAEA;;EAEE,iBAAiB;EACjB,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,gCAAgC;EAChC,iBAAiB;EACjB,iBAAiB;AACnB",sourcesContent:["winning-statistics-modal {\n  opacity: 1;\n  visibility: visible;\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n}\n\n.modalInner {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 35rem;\n  transition: top 0.25s ease;\n  height: 50rem;\n  margin: auto;\n  overflow: auto;\n  background: #fff;\n  border-radius: 0.5rem;\n  position: relative;\n  padding: 0rem 1.6rem;\n}\n\n.modalCloseButton {\n  padding: 0;\n  margin: 2rem;\n  width: 2rem;\n  position: absolute;\n  right: 0rem;\n  top: 0rem;\n  cursor: pointer;\n}\n\n.modalCloseIcon {\n  stroke: #000000;\n  fill: transparent;\n  stroke-width: 5;\n}\n\nsvg {\n  display: block;\n}\n\n.textCenter {\n  text-align: center;\n}\n\n.title {\n  padding-bottom: 2rem;\n}\n\n.tableContainer {\n  justify-content: center;\n  display: flex;\n}\n\n.resultTable {\n  width: 31.8rem;\n  margin: 0 auto;\n  border-collapse: collapse;\n  text-align: center;\n}\n\n.rateOfReturnMessage {\n  text-align: center;\n  margin: 3.2rem 0rem;\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n.resetButton {\n  height: 3.6rem;\n  border-radius: 0.4rem;\n  background-color: #4e5ba6;\n  color: #ffffff;\n}\n\ntbody,\nthead {\n  width: 100%;\n}\n\nth,\ntd {\n  font-size: 1.5rem;\n  padding: 1rem;\n  border-bottom: 1px solid #dcdcdc;\n}\n\nth {\n  border-top: 0.1rem solid #dcdcdc;\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n"],sourceRoot:""}]),a.locals={modalInner:"PREvYxsjNh2VVrHqNSWe",modalCloseButton:"TCwElccGkv3BJlW5mJjQ",modalCloseIcon:"EqaZlqIJCqazwRC3kbZO",textCenter:"TeLHp3BDSk9LMhoi9OLK",title:"qCVAaAm4lvJ1zo9f1PgL",tableContainer:"DVRnuxeOTJIHQPUPgrBw",resultTable:"JfIGylPsdCpl5oTgCCdV",rateOfReturnMessage:"hpGYP51TmdXUc9QlEnPK",resetButton:"UbUiM53V_BguVj2gxlz5"};const c=a},257:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"html {\n  font-size: 10px;\n}\n\n.title {\n  font-weight: 800;\n  font-size: 2.4rem;\n}\n\n.subtitle {\n  font-weight: 600;\n  font-size: 2rem;\n}\n\n.body,\n.placeholder {\n  font-weight: 300;\n  font-size: 1.5rem;\n}\n\n.button,\n.caption {\n  line-height: 0.125rem;\n  font-weight: 700;\n  font-size: 1.4rem;\n}\n\n.error-message {\n  color: red;\n  margin-top: 0.8rem;\n  font-size: 1.2rem;\n}\n\n.close {\n  visibility: hidden;\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type='number'] {\n  -moz-appearance: textfield;\n}\n","",{version:3,sources:["webpack://./src/web/styles/index.css"],names:[],mappings:"AAAA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;;EAEE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;;EAEE,qBAAqB;EACrB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,UAAU;EACV,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,gCAAgC;AAChC;;EAEE,wBAAwB;EACxB,SAAS;AACX;;AAEA,YAAY;AACZ;EACE,0BAA0B;AAC5B",sourcesContent:["html {\n  font-size: 10px;\n}\n\n.title {\n  font-weight: 800;\n  font-size: 2.4rem;\n}\n\n.subtitle {\n  font-weight: 600;\n  font-size: 2rem;\n}\n\n.body,\n.placeholder {\n  font-weight: 300;\n  font-size: 1.5rem;\n}\n\n.button,\n.caption {\n  line-height: 0.125rem;\n  font-weight: 700;\n  font-size: 1.4rem;\n}\n\n.error-message {\n  color: red;\n  margin-top: 0.8rem;\n  font-size: 1.2rem;\n}\n\n.close {\n  visibility: hidden;\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type='number'] {\n  -moz-appearance: textfield;\n}\n"],sourceRoot:""}]);const c=a},540:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  font: inherit;\n  color: inherit;\n}\n*,\n:after,\n:before {\n  box-sizing: border-box;\n}\n:root {\n  -webkit-tap-highlight-color: transparent;\n  -webkit-text-size-adjust: 100%;\n  text-size-adjust: 100%;\n  cursor: default;\n  line-height: 1.5;\n  overflow-wrap: break-word;\n  -moz-tab-size: 4;\n  tab-size: 4;\n}\nhtml,\nbody {\n  height: 100%;\n}\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\nbutton {\n  background: none;\n  border: 0;\n  cursor: pointer;\n}\na {\n  text-decoration: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n","",{version:3,sources:["webpack://./src/web/styles/reset.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,aAAa;EACb,cAAc;AAChB;AACA;;;EAGE,sBAAsB;AACxB;AACA;EACE,wCAAwC;EACxC,8BAA8B;EAC9B,sBAAsB;EACtB,eAAe;EACf,gBAAgB;EAChB,yBAAyB;EACzB,gBAAgB;EAChB,WAAW;AACb;AACA;;EAEE,YAAY;AACd;AACA;;;;;EAKE,cAAc;EACd,eAAe;AACjB;AACA;EACE,gBAAgB;EAChB,SAAS;EACT,eAAe;AACjB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  font: inherit;\n  color: inherit;\n}\n*,\n:after,\n:before {\n  box-sizing: border-box;\n}\n:root {\n  -webkit-tap-highlight-color: transparent;\n  -webkit-text-size-adjust: 100%;\n  text-size-adjust: 100%;\n  cursor: default;\n  line-height: 1.5;\n  overflow-wrap: break-word;\n  -moz-tab-size: 4;\n  tab-size: 4;\n}\nhtml,\nbody {\n  height: 100%;\n}\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\nbutton {\n  background: none;\n  border: 0;\n  cursor: pointer;\n}\na {\n  text-decoration: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var u=this[c][0];null!=u&&(a[u]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var u=n[c],s=r.base?u[0]+r.base:u[0],l=i[s]||0,f="".concat(s," ").concat(l);i[s]=l+1;var p=e(f),d={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==p)t[p].references++,t[p].updater(d);else{var m=o(d,r);r.byIndex=c,t.splice(c,0,{identifier:f,updater:m,references:1})}a.push(f)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=e(i[a]);t[c].references--}for(var u=r(n,o),s=0;s<i.length;s++){var l=e(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=u}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),i=e(569),a=e.n(i),c=e(565),u=e.n(c),s=e(216),l=e.n(s),f=e(589),p=e.n(f),d=e(540),m={};m.styleTagTransform=p(),m.setAttributes=u(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),t()(d.Z,m),d.Z&&d.Z.locals&&d.Z.locals;var A=e(257),b={};b.styleTagTransform=p(),b.setAttributes=u(),b.insert=a().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=l(),t()(A.Z,b),A.Z&&A.Z.locals&&A.Z.locals;var y=Object.freeze({buyLottoPrice:"buyLottoPrice",openModal:"openModal",reset:"reset"}),h=Object.freeze({errorMessage:".error-message",purchasedLottoForm:"#purchased-lotto-form",purchasedLottoInput:"#purchased-lotto-input",winningDetailForm:"#winning-detail-form",winningNumberInputs:".winning-number",bonusNumberInput:"#bonus-number-input",purchasedLottoSection:"purchased-lotto-section",modalCloseButton:"#modal-close-button",resetButton:"#reset-button"});function v(n){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},v(n)}function g(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==v(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===v(o)?o:String(o)),r)}var o}function E(n){var t="function"==typeof Map?new Map:void 0;return E=function(n){if(null===n||(e=n,-1===Function.toString.call(e).indexOf("[native code]")))return n;var e;if("function"!=typeof n)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(n))return t.get(n);t.set(n,r)}function r(){return w(n,arguments,O(this).constructor)}return r.prototype=Object.create(n.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),B(r,n)},E(n)}function w(n,t,e){return w=C()?Reflect.construct.bind():function(n,t,e){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(n,r));return e&&B(o,e.prototype),o},w.apply(null,arguments)}function C(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}function B(n,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},B(n,t)}function O(n){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},O(n)}const j=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&B(n,t)}(a,n);var t,e,r,o,i=(r=a,o=C(),function(){var n,t=O(r);if(o){var e=O(this).constructor;n=Reflect.construct(t,arguments,e)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}(this,n)});function a(){return function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.apply(this,arguments)}return t=a,(e=[{key:"connectedCallback",value:function(){this.render(),this.setEvent()}},{key:"disconnectedCallback",value:function(){this.removeEvent()}},{key:"render",value:function(){}},{key:"setEvent",value:function(){}},{key:"removeEvent",value:function(){}},{key:"getTemplate",value:function(){}},{key:"emit",value:function(n,t){var e=new CustomEvent(n,{bubbles:!0,detail:t});this.dispatchEvent(e)}},{key:"on",value:function(n,t){var e=n.target,r=n.eventName;e.addEventListener(r,t)}},{key:"off",value:function(n,t){var e=n.target,r=n.eventName;e.removeEventListener(r,t)}}])&&g(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),a}(E(HTMLElement));var S=e(944),T={};T.styleTagTransform=p(),T.setAttributes=u(),T.insert=a().bind(null,"head"),T.domAPI=o(),T.insertStyleElement=l(),t()(S.Z,T);const k=S.Z&&S.Z.locals?S.Z.locals:void 0;function P(n){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},P(n)}function x(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==P(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===P(o)?o:String(o)),r)}var o}function R(n,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},R(n,t)}function N(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function L(n){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},L(n)}function _(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}var I=new WeakSet,W=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&R(n,t)}(a,n);var t,e,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,t=L(r);if(o){var e=L(this).constructor;n=Reflect.construct(t,arguments,e)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return N(n)}(this,n)});function a(){var n;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return function(n,t){!function(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(n,t),t.add(n)}(N(n=i.call.apply(i,[this].concat(e))),I),n}return t=a,(e=[{key:"render",value:function(){this.innerHTML="\n        <header class=".concat(k.navBar,'>\n          <h1 class="title">🎱 행운의 로또</h1>\n        </header>\n        <main class=').concat(k.mainContainer,'>\n          <h2 class="').concat(k.mainTitle,' title">🎱 내 번호 당첨 확인 🎱</h2>\n          <purchased-lotto-form></purchased-lotto-form>\n          <purchased-lotto-section class="close"></purchased-lotto-section>\n          <winning-detail-form class="close"></winning-detail-form>\n        </main>\n        <footer class=').concat(k.footer,'>\n          <p class="caption">&copy;Copyright 2023. woowacourse</p>\n        </footer>\n        <winning-statistics-modal class="close"></winning-statistics-modal>\n    ')}},{key:"setEvent",value:function(){this.on({target:document,eventName:y.reset},_(this,I,z).bind(this))}},{key:"removeEvent",value:function(){this.off({target:document,eventName:y.reset},_(this,I,z).bind(this))}}])&&x(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),a}(j);function z(){this.render()}customElements.define("lotto-app",W);var M=e(146),Z={};Z.styleTagTransform=p(),Z.setAttributes=u(),Z.insert=a().bind(null,"head"),Z.domAPI=o(),Z.insertStyleElement=l(),t()(M.Z,Z);const q=M.Z&&M.Z.locals?M.Z.locals:void 0;function U(n){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},U(n)}var V=function n(t){return Object.getOwnPropertyNames(t).forEach((function(e){var r=t[e];r&&"object"===U(r)&&n(r)})),Object.freeze(t)};const D=V({shuffle:function(n){for(var t=Array.from({length:n},(function(n,t){return t+1})),e=[];0!==t.length;){var r=Math.floor(Math.random()*t.length),o=t.splice(r,1)[0];e.push(o)}return e},pickUniqueNumbersInRange:function(n){var t=n.end,e=n.count;return this.shuffle(t).slice(0,e)}});function G(n){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},G(n)}function F(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Y(r.key),r)}}function Y(n){var t=function(n,t){if("object"!==G(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==G(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===G(t)?t:String(t)}var X,H,K,J=function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n)}var t,e,r;return t=n,r=[{key:"from",value:function(){return new n}}],(e=[{key:"createNumber",value:function(){return D.pickUniqueNumbersInRange({start:n.LOTTO_RULE.min,end:n.LOTTO_RULE.max,count:n.LOTTO_RULE.count}).sort((function(n,t){return n-t}))}}])&&F(t.prototype,e),r&&F(t,r),Object.defineProperty(t,"prototype",{writable:!1}),n}();X=J,K={min:1,max:45,count:6},(H=Y(H="LOTTO_RULE"))in X?Object.defineProperty(X,H,{value:K,enumerable:!0,configurable:!0,writable:!0}):X[H]=K;const Q=J;function $(n){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},$(n)}function nn(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,en(r.key),r)}}function tn(n,t,e){return(t=en(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function en(n){var t=function(n,t){if("object"!==$(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===$(t)?t:String(t)}function rn(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var on=new WeakMap,an=function(){function n(t){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),function(n,t,e){!function(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(n,t),t.set(n,e)}(this,on,{writable:!0,value:void 0}),function(n,t,e){(function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}})(n,rn(n,t,"set"),e)}(this,on,t)}var t,e;return t=n,(e=[{key:"purchase",value:function(){var t=function(n,t){return t.get?t.get.call(n):t.value}(this,rn(this,on,"get"))/n.LOTTO_PRICE_PER_UNIT;return Array.from({length:t},(function(){return Q.from().createNumber()}))}}])&&nn(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();tn(an,"LOTTO_PRICE_PER_UNIT",1e3),tn(an,"BUY_LOTTO_PRICE_RANGE",Object.freeze({min:1e3,max:1e4}));const cn=an;function un(n){return un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},un(n)}function sn(n){var t="function"==typeof Map?new Map:void 0;return sn=function(n){if(null===n||(e=n,-1===Function.toString.call(e).indexOf("[native code]")))return n;var e;if("function"!=typeof n)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(n))return t.get(n);t.set(n,r)}function r(){return ln(n,arguments,dn(this).constructor)}return r.prototype=Object.create(n.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),pn(r,n)},sn(n)}function ln(n,t,e){return ln=fn()?Reflect.construct.bind():function(n,t,e){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(n,r));return e&&pn(o,e.prototype),o},ln.apply(null,arguments)}function fn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}function pn(n,t){return pn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},pn(n,t)}function dn(n){return dn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},dn(n)}function mn(n){var t=function(n,t){if("object"!==un(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==un(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===un(t)?t:String(t)}var An=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&pn(n,t)}(i,n);var t,e,r,o=(e=i,r=fn(),function(){var n,t=dn(e);if(r){var o=dn(this).constructor;n=Reflect.construct(t,arguments,o)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===un(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}(this,n)});function i(n){return function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),o.call(this,"\n".concat(i.PREFIX," ").concat(n,"\n"))}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(sn(Error));!function(n,t,e){(t=mn(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e}(An,"PREFIX","[ERROR]");const bn=An;var yn=function(n,t){Object.values(n).forEach((function(n){var e=n.errorMessage;if(!(0,n.isValid)(t))throw new bn(e)}))},hn=cn.BUY_LOTTO_PRICE_RANGE,vn=cn.LOTTO_PRICE_PER_UNIT;const gn=V({validationTypes:{isTypeOfNumber:{errorMessage:"로또 구입 금액의 형식이 올바르지 않습니다. 다시 입력해주세요.",isValid:function(n){var t=Number(n);return!Number.isNaN(t)&&Number.isInteger(t)&&t>=0}},outOfRange:{errorMessage:"로또 구입 금액은 ".concat(hn.min.toLocaleString(),"원 ~ ").concat(hn.max.toLocaleString(),"원 사이여야 합니다. 다시 입력해주세요."),isValid:function(n){var t=Number(n);return t>=hn.min&&t<=hn.max}},notInThousandUnit:{errorMessage:"로또 구입 금액은 ".concat(vn,"원 단위여야 합니다. 다시 입력해주세요."),isValid:function(n){return Number(n)%vn==0}}},check:function(n){yn(this.validationTypes,n)}});var En=function(n,t){return n.querySelector(t)},wn=function(n,t){var e=En(En(document,t),h.errorMessage);e?function(n,t){n.innerHTML=t}(e,n):function(n,t){var e=function(n){var t=document.createElement("p"),e=document.createTextNode(n);return t.classList.add("error-message"),t.appendChild(e),t}(n);document.querySelector(t).appendChild(e)}(n,t)},Cn=function(n){var t=En(n,h.errorMessage);t&&t.remove()};function Bn(n){return Bn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Bn(n)}function On(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,jn(r.key),r)}}function jn(n){var t=function(n,t){if("object"!==Bn(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==Bn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===Bn(t)?t:String(t)}function Sn(n,t){return Sn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},Sn(n,t)}function Tn(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function kn(n){return kn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},kn(n)}function Pn(n,t){!function(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(n,t),t.add(n)}function xn(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}var Rn=new WeakSet,Nn=new WeakSet,Ln=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&Sn(n,t)}(a,n);var t,e,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,t=kn(r);if(o){var e=kn(this).constructor;n=Reflect.construct(t,arguments,e)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===Bn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Tn(n)}(this,n)});function a(){var n;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return Pn(Tn(n=i.call.apply(i,[this].concat(e))),Nn),Pn(Tn(n),Rn),n}return t=a,(e=[{key:"render",value:function(){this.innerHTML='\n        <form id="purchased-lotto-form">\n          <label for="purchased-lotto-input" class="body">구입할 금액을 입력해주세요.</label>\n          <div id="input-container" class='.concat(q.inputContainer,'>\n            <input id="purchased-lotto-input" type="number" class="').concat(q.purchasedLottoPriceInput,' placeholder" placeholder="금액"/>\n            <button type="submit" class="').concat(q.purchasedButton,' caption">구입</button>\n          </div>\n        </form>\n    ')}},{key:"removeEvent",value:function(){this.off({target:En(this,h.purchasedLottoForm),eventName:"submit"},xn(this,Rn,_n).bind(this))}},{key:"setEvent",value:function(){this.on({target:En(this,h.purchasedLottoForm),eventName:"submit"},xn(this,Rn,_n).bind(this))}}])&&On(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),a}(j);function _n(n){try{n.preventDefault();var t=xn(this,Nn,In).call(this);gn.check(t),Cn(this),En(this,h.purchasedLottoInput).value="",this.emit(y.buyLottoPrice,Number(t))}catch(n){if(n instanceof bn){var e=n.message.replace(bn.PREFIX,"");wn(e,h.purchasedLottoForm)}}}function In(){var n=En(this,h.purchasedLottoInput);return null==n?void 0:n.value}customElements.define("purchased-lotto-form",Ln);var Wn=e(493),zn={};zn.styleTagTransform=p(),zn.setAttributes=u(),zn.insert=a().bind(null,"head"),zn.domAPI=o(),zn.insertStyleElement=l(),t()(Wn.Z,zn);const Mn=Wn.Z&&Wn.Z.locals?Wn.Z.locals:void 0;function Zn(n){return Zn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Zn(n)}function qn(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Un(r.key),r)}}function Un(n){var t=function(n,t){if("object"!==Zn(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==Zn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===Zn(t)?t:String(t)}function Vn(n,t){return Vn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},Vn(n,t)}function Dn(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function Gn(n){return Gn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},Gn(n)}function Fn(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var Yn=new WeakMap,Xn=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&Vn(n,t)}(a,n);var t,e,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,t=Gn(r);if(o){var e=Gn(this).constructor;n=Reflect.construct(t,arguments,e)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===Zn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Dn(n)}(this,n)});function a(n){var t;return function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),function(n,t,e){!function(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(n,t),t.set(n,e)}(Dn(t=i.call(this)),Yn,{writable:!0,value:void 0}),function(n,t,e){(function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}})(n,Fn(n,t,"set"),e)}(Dn(t),Yn,n),t}return t=a,(e=[{key:"getTemplate",value:function(){return'\n      <li class="'.concat(Mn.purchasedLotto,' body">\n        <span class=').concat(Mn.ticketIcon,">🎟️</span>\n        <span class=").concat(Mn.lottoNumber,">").concat((this,n=Yn,function(n,t){return t.get?t.get.call(n):t.value}(this,Fn(this,n,"get"))).join(", "),"</ㄴ>\n      </li>\n    ");var n}}])&&qn(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),a}(j);customElements.define("purchased-lotto",Xn);const Hn=Xn;var Kn=e(497),Jn={};Jn.styleTagTransform=p(),Jn.setAttributes=u(),Jn.insert=a().bind(null,"head"),Jn.domAPI=o(),Jn.insertStyleElement=l(),t()(Kn.Z,Jn);const Qn=Kn.Z&&Kn.Z.locals?Kn.Z.locals:void 0,$n=Object.freeze({createLottoNumbers:function(n){return new cn(n).purchase()}});function nt(n){return nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},nt(n)}function tt(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,et(r.key),r)}}function et(n){var t=function(n,t){if("object"!==nt(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==nt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===nt(t)?t:String(t)}function rt(n,t){return rt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},rt(n,t)}function ot(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function it(n){return it=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},it(n)}function at(n,t){ut(n,t),t.add(n)}function ct(n,t,e){ut(n,t),t.set(n,e)}function ut(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function st(n,t,e){return function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}}(n,pt(n,t,"set"),e),e}function lt(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}function ft(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,pt(n,t,"get"))}function pt(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var dt=new WeakMap,mt=new WeakMap,At=new WeakMap,bt=new WeakSet,yt=new WeakSet,ht=new WeakSet,vt=new WeakSet,gt=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&rt(n,t)}(a,n);var t,e,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,t=it(r);if(o){var e=it(this).constructor;n=Reflect.construct(t,arguments,e)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===nt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return ot(n)}(this,n)});function a(){var n;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return at(ot(n=i.call.apply(i,[this].concat(e))),vt),at(ot(n),ht),at(ot(n),yt),at(ot(n),bt),ct(ot(n),dt,{writable:!0,value:0}),ct(ot(n),mt,{writable:!0,value:[]}),ct(ot(n),At,{writable:!0,value:""}),n}return t=a,(e=[{key:"render",value:function(){var n;this.innerHTML='\n        <section>\n          <p class="'.concat(Qn.purchasedMessage,' body">총 ').concat(null===(n=ft(this,mt))||void 0===n?void 0:n.length,'개를 구매하였습니다.</p>\n          <ul class="').concat(Qn.purchasedLottos,'">\n            ').concat(ft(this,At),"\n          </ul>\n        </section>\n    ")}},{key:"removeEvent",value:function(){this.off({target:document,eventName:y.buyLottoPrice},lt(this,bt,Et).bind(this))}},{key:"setEvent",value:function(){this.on({target:document,eventName:y.buyLottoPrice},lt(this,bt,Et).bind(this))}},{key:"getBuyLottoDetails",value:function(){return{lottoNumbers:ft(this,mt),buyLottoPrice:ft(this,dt)}}}])&&tt(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),a}(j);function Et(n){lt(this,yt,wt).call(this,n),st(this,At,lt(this,ht,Ct).call(this)),this.classList.remove("close"),this.connectedCallback()}function wt(n){st(this,dt,null==n?void 0:n.detail);var t=$n.createLottoNumbers(ft(this,dt));st(this,mt,t)}function Ct(){return ft(this,mt).reduce(lt(this,vt,Bt),"")}function Bt(n,t){var e=new Hn(t);return"".concat(n,"\n").concat(e.getTemplate())}customElements.define("purchased-lotto-section",gt);var Ot=e(847),jt={};jt.styleTagTransform=p(),jt.setAttributes=u(),jt.insert=a().bind(null,"head"),jt.domAPI=o(),jt.insertStyleElement=l(),t()(Ot.Z,jt);const St=Ot.Z&&Ot.Z.locals?Ot.Z.locals:void 0;function Tt(n){return Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Tt(n)}function kt(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Nt(r.key),r)}}function Pt(n,t){Rt(n,t),t.add(n)}function xt(n,t,e){Rt(n,t),t.set(n,e)}function Rt(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Nt(n){var t=function(n,t){if("object"!==Tt(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==Tt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===Tt(t)?t:String(t)}function Lt(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,Wt(n,t,"get"))}function _t(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}function It(n,t,e){return function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}}(n,Wt(n,t,"set"),e),e}function Wt(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var zt=new WeakMap,Mt=new WeakMap,Zt=new WeakSet,qt=new WeakSet,Ut=function(){function n(t){var e=t.buyLottoPrice,r=t.winningRankResult;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Pt(this,qt),Pt(this,Zt),xt(this,zt,{writable:!0,value:void 0}),xt(this,Mt,{writable:!0,value:void 0}),It(this,zt,e),It(this,Mt,r)}var t,e;return t=n,(e=[{key:"execute",value:function(){var n=_t(this,Zt,Vt).call(this);return _t(this,qt,Dt).call(this,n)}}])&&kt(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function Vt(){var n=this;return Object.keys(Lt(this,Mt)).reduce((function(t,e){return t+Lt(n,Mt)[e]*Ut.WINNING_PRIZE_DETAIL[e]}),0)}function Dt(n){return(n/Lt(this,zt)*100).toFixed(1)}!function(n,t,e){(t=Nt(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e}(Ut,"WINNING_PRIZE_DETAIL",{"1st":2e9,"2nd":3e7,"3rd":15e5,"4th":5e4,"5th":5e3});const Gt=Ut;function Ft(n){return Ft="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ft(n)}function Yt(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}function Xt(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function Ht(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?Xt(Object(e),!0).forEach((function(t){ne(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):Xt(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function Kt(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,te(r.key),r)}}function Jt(n,t){$t(n,t),t.add(n)}function Qt(n,t,e){$t(n,t),t.set(n,e)}function $t(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function ne(n,t,e){return(t=te(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function te(n){var t=function(n,t){if("object"!==Ft(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==Ft(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===Ft(t)?t:String(t)}function ee(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}function re(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,oe(n,t,"get"))}function oe(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var ie=new WeakMap,ae=new WeakMap,ce=new WeakSet,ue=new WeakSet,se=new WeakSet,le=function(){function n(t){var e=t.winningNumber,r=t.lottoNumbers,o=t.bonusNumber;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Jt(this,se),Jt(this,ue),Jt(this,ce),Qt(this,ie,{writable:!0,value:void 0}),Qt(this,ae,{writable:!0,value:{"1st":0,"2nd":0,"3rd":0,"4th":0,"5th":0}}),function(n,t,e){(function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}})(n,oe(n,t,"set"),e)}(this,ie,{winningNumber:e,lottoNumbers:r,bonusNumber:o})}var t,e;return t=n,(e=[{key:"calculateRank",value:function(){var n=this;return re(this,ie).lottoNumbers.reduce((function(t,e){var r=ee(n,ce,fe).call(n,e);return null!==r?Ht(Ht({},t),{},ne({},r,t[r]+1)):t}),re(this,ae))}}])&&Kt(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function fe(n){var t=this,e=ee(this,ue,pe).call(this,n),r=Object.entries(le.RANK_RULE).find((function(r){var o,i,a=(o=r,i=2,function(n){if(Array.isArray(n))return n}(o)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var r,o,i,a,c=[],u=!0,s=!1;try{if(i=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;u=!1}else for(;!(u=(r=i.call(e)).done)&&(c.push(r.value),c.length!==t);u=!0);}catch(n){s=!0,o=n}finally{try{if(!u&&null!=e.return&&(a=e.return(),Object(a)!==a))return}finally{if(s)throw o}}return c}}(o,i)||function(n,t){if(n){if("string"==typeof n)return Yt(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?Yt(n,t):void 0}}(o,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[1],c=a.match,u=a.hasBonus;return e===c&&ee(t,se,de).call(t,n)===u}));return r?r[0]:null}function pe(n){var t=new Set(re(this,ie).winningNumber);return n.reduce((function(n,e){return t.has(e)?n+1:n}),0)}function de(n){return n.includes(re(this,ie).bonusNumber)}ne(le,"RANK_RULE",{"1st":{match:6,hasBonus:!1,description:"6개 일치"},"2nd":{match:5,hasBonus:!0,description:"5개 일치, 보너스 볼 일치"},"3rd":{match:5,hasBonus:!1,description:"5개 일치"},"4th":{match:4,hasBonus:!1,description:"4개 일치"},"5th":{match:3,hasBonus:!1,description:"3개 일치"}});const me=le,Ae=Object.freeze({createWinningResult:function(n){var t=n.winningNumber,e=n.bonusNumber,r=n.lottoNumbers,o=n.buyLottoPrice,i=new me({winningNumber:t,bonusNumber:e,lottoNumbers:r}).calculateRank();return{rateOfReturn:new Gt({buyLottoPrice:o,winningRankResult:i}).execute(),winningRankResult:i}}});var be=Object.freeze({emptyString:"",space:" ",comma:","});V({validationTypes:{emptyValues:{errorMessage:"입력값이 존재하지 않습니다. 다시 입력해 주세요.",isValid:function(n){return n!==be.emptyString}}},check:function(n){yn(this.validationTypes,n)}});var ye=/^([0-9]\d?)(,[0-9]\d?)*$/,he=Q.LOTTO_RULE;const ve=V({validationTypes:{isValidType:{errorMessage:"당첨 번호 입력의 형식이 올바르지 않습니다. 다시 입력해주세요.",isValid:function(n){return ye.test(n)}},isValidLength:{errorMessage:"당첨 번호는 ".concat(he.count,"개여야 합니다. 다시 입력해주세요."),isValid:function(n){return n.split(be.comma).map(Number).length===he.count}},isValidRange:{errorMessage:"당첨 번호는 ".concat(he.min," ~ ").concat(he.max," 사이의 자연수여야 합니다. 다시 입력해주세요."),isValid:function(n){return n.split(be.comma).map(Number).every((function(n){return n>=he.min&&n<=he.max}))}},isUnique:{errorMessage:"당첨 번호는 서로 중복되지 않아야 합니다. 다시 입력해주세요.",isValid:function(n){var t=n.split(be.comma).map(Number);return new Set(t).size===t.length}}},check:function(n){yn(this.validationTypes,n)},checkWinningNumber:function(n){yn(this.validationTypes,n.join(be.comma))}});var ge=Q.LOTTO_RULE;const Ee=V({validationTypes:{isTypeOfNumber:{errorMessage:"보너스 번호의 형식이 유효하지 않습니다. 다시 입력해 주세요.",isValid:function(n){var t=n.inputValue,e=Number(t);return!Number.isNaN(e)&&Number.isInteger(e)&&e>=0}},isValidRange:{errorMessage:"보너스 번호는 ".concat(ge.min," ~ ").concat(ge.max," 사이여야 합니다. 다시 입력해 주세요."),isValid:function(n){var t=n.inputValue,e=Number(t);return e>=ge.min&&e<=ge.max}},isUniqueBonusNumber:{errorMessage:"보너스 번호는 당첨 번호에 포함되지 않은 번호여야 합니다. 다시 입력해 주세요.",isValid:function(n){var t=n.inputValue,e=n.winningNumber,r=Number(t);return!e.includes(r)}}},check:function(n,t){yn(this.validationTypes,{inputValue:n,winningNumber:t})},checkBonusNumber:function(n,t){yn(this.validationTypes,{inputValue:String(n),winningNumber:t})}});function we(n){return we="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},we(n)}function Ce(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Be(r.key),r)}}function Be(n){var t=function(n,t){if("object"!==we(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==we(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===we(t)?t:String(t)}function Oe(n,t){return Oe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},Oe(n,t)}function je(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function Se(n){return Se=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},Se(n)}function Te(n,t){!function(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(n,t),t.add(n)}function ke(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}var Pe=Q.LOTTO_RULE,xe=new WeakSet,Re=new WeakSet,Ne=new WeakSet,Le=new WeakSet,_e=new WeakSet,Ie=new WeakSet,We=new WeakSet,ze=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&Oe(n,t)}(a,n);var t,e,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,t=Se(r);if(o){var e=Se(this).constructor;n=Reflect.construct(t,arguments,e)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===we(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return je(n)}(this,n)});function a(){var n;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return Te(je(n=i.call.apply(i,[this].concat(e))),We),Te(je(n),Ie),Te(je(n),_e),Te(je(n),Le),Te(je(n),Ne),Te(je(n),Re),Te(je(n),xe),n}return t=a,(e=[{key:"render",value:function(){this.innerHTML='\n        <form id="winning-detail-form" class="'.concat(St.winningDetailForm,'">\n          <p class="body">지난 주 당첨번호 ').concat(Pe.count,'개와 보너스 번호 1개를 입력해주세요.</p>\n          <div class="').concat(St.numbersInputContainer,'">\n            <div>\n              <label for="winning-number-input-1" class="body">당첨 번호</label>\n              <div class=').concat(St.winningNumberInputContainer,">\n                ").concat(ke(this,xe,Me).call(this,Pe.count),"\n              </div>\n            </div>\n            <div class=").concat(St.bonusNumberContainer,'>\n              <label for="bonus-number-input" class="body">보너스 번호</label>\n              ').concat(ke(this,xe,Me).call(this,1,{isBonusNumber:!0}),'\n            </div>\n          </div>\n          <button type="submit" class="').concat(St.submitButton,' caption">결과 확인하기</button>\n        </form>\n      ')}},{key:"removeEvent",value:function(){this.off({target:document,eventName:y.buyLottoPrice},ke(this,Re,Ze).bind(this)),this.off({target:En(this,h.winningDetailForm),eventName:"submit"},ke(this,_e,Ve).bind(this))}},{key:"setEvent",value:function(){this.on({target:document,eventName:y.buyLottoPrice},ke(this,Re,Ze).bind(this)),this.on({target:En(this,h.winningDetailForm),eventName:"submit"},ke(this,_e,Ve).bind(this))}}])&&Ce(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),a}(j);function Me(n){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{isBonusNumber:!1}).isBonusNumber?'<input id="bonus-number-input" type="number" class="'.concat(St.numberInput,' bonus-number"/>'):Array.from({length:n},(function(n,t){var e="winning-number-input-".concat(t+1);return'<input id="'.concat(e,'" type="number" class="').concat(St.numberInput,' winning-number"/>')})).join("")}function Ze(){ke(this,Ne,qe).call(this),this.classList.remove("close"),ke(this,Le,Ue).call(this)}function qe(){this.querySelectorAll(h.winningNumberInputs).forEach((function(n){n.value=""})),En(this,h.bonusNumberInput).value=""}function Ue(){var n=this.querySelectorAll(h.winningNumberInputs);n&&n[0]instanceof HTMLInputElement&&n[0].focus()}function Ve(n){try{n.preventDefault();var t=ke(this,Ie,De).call(this),e=Ae.createWinningResult(t),r=e.winningRankResult,o=e.rateOfReturn;Cn(this),this.emit(y.openModal,{winningRankResult:r,rateOfReturn:o})}catch(n){if(n instanceof bn){var i=n.message.replace(bn.PREFIX,"");wn(i,h.winningDetailForm)}}}function De(){var n=ke(this,We,Ge).call(this),t=n.winningNumber,e=n.bonusNumber,r=document.querySelector(h.purchasedLottoSection).getBuyLottoDetails();return{winningNumber:t,bonusNumber:e,buyLottoPrice:r.buyLottoPrice,lottoNumbers:r.lottoNumbers}}function Ge(){var n,t=Array.from(this.querySelectorAll(h.winningNumberInputs),(function(n){return n.value})).filter((function(n){return""!==n})).map(Number),e=Number(null===(n=En(this,h.bonusNumberInput))||void 0===n?void 0:n.value);return ve.checkWinningNumber(t),Ee.checkBonusNumber(e,t),{winningNumber:t,bonusNumber:e}}customElements.define("winning-detail-form",ze);var Fe=e(500),Ye={};Ye.styleTagTransform=p(),Ye.setAttributes=u(),Ye.insert=a().bind(null,"head"),Ye.domAPI=o(),Ye.insertStyleElement=l(),t()(Fe.Z,Ye);const Xe=Fe.Z&&Fe.Z.locals?Fe.Z.locals:void 0;function He(n){return He="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},He(n)}function Ke(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Je(r.key),r)}}function Je(n){var t=function(n,t){if("object"!==He(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==He(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===He(t)?t:String(t)}function Qe(n,t){return Qe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},Qe(n,t)}function $e(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function nr(n){return nr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},nr(n)}function tr(n,t){rr(n,t),t.add(n)}function er(n,t,e){rr(n,t),t.set(n,e)}function rr(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function or(n,t,e){return function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}}(n,cr(n,t,"set"),e),e}function ir(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}function ar(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,cr(n,t,"get"))}function cr(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var ur=new WeakMap,sr=new WeakMap,lr=new WeakSet,fr=new WeakSet,pr=new WeakSet,dr=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&Qe(n,t)}(a,n);var t,e,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,t=nr(r);if(o){var e=nr(this).constructor;n=Reflect.construct(t,arguments,e)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===He(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return $e(n)}(this,n)});function a(){var n;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return tr($e(n=i.call.apply(i,[this].concat(e))),pr),tr($e(n),fr),tr($e(n),lr),er($e(n),ur,{writable:!0,value:void 0}),er($e(n),sr,{writable:!0,value:void 0}),n}return t=a,(e=[{key:"render",value:function(){var n;this.innerHTML='\n        <div class="'.concat(Xe.modalInner,'">\n            <button id="modal-close-button" type="button" class="').concat(Xe.modalCloseButton,'">\n                <svg viewBox="0 0 40 40">\n                    <path class="').concat(Xe.modalCloseIcon,'" d="M 10,10 L 30,30 M 30,10 L 10,30"></path>\n                </svg>\n            </button>\n            <h2 class="').concat(Xe.textCenter," ").concat(Xe.title,' subtitle">🏆 당첨 통계 🏆</h2>\n            <div class="').concat(Xe.tableContainer,'">\n                <table class="').concat(Xe.resultTable,'">\n                    <thead>\n                        <tr class="').concat(Xe.textCenter,'">\n                        <th>일치 갯수</th>\n                        <th>당첨금</th>\n                        <th>당첨 갯수</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr class="').concat(Xe.textCenter,'">\n                        <td>').concat(me.RANK_RULE["5th"].match,"개</td>\n                        <td>").concat(Gt.WINNING_PRIZE_DETAIL["5th"].toLocaleString(),"</td>\n                        <td>\n                            <span>").concat(ar(this,sr)?ar(this,sr)["5th"]:0,'</span>개\n                        </td>\n                        </tr>\n                        <tr class="').concat(Xe.textCenter,'">\n                        <td>').concat(me.RANK_RULE["4th"].match,"개</td>\n                        <td>").concat(Gt.WINNING_PRIZE_DETAIL["4th"].toLocaleString(),"</td>\n                        <td>\n                            <span>").concat(ar(this,sr)?ar(this,sr)["4th"]:0,'</span>개\n                        </td>\n                        </tr>\n                        <tr class="').concat(Xe.textCenter,'">\n                        <td>').concat(me.RANK_RULE["3rd"].match,"개</td>\n                        <td>").concat(Gt.WINNING_PRIZE_DETAIL["3rd"].toLocaleString(),"</td>\n                        <td>\n                            <span>").concat(ar(this,sr)?ar(this,sr)["3rd"]:0,'</span>개\n                        </td>\n                        </tr>\n                        <tr class="').concat(Xe.textCenter,'">\n                        <td>').concat(me.RANK_RULE["2nd"].match,"개 + 보너스볼</td>\n                        <td>").concat(Gt.WINNING_PRIZE_DETAIL["2nd"].toLocaleString(),"</td>\n                        <td>\n                            <span>").concat(ar(this,sr)?ar(this,sr)["2nd"]:0,'</span>개\n                        </td>\n                        </tr>\n                        <tr class="').concat(Xe.textCenter,'">\n                        <td>').concat(me.RANK_RULE["1st"].match,"개</td>\n                        <td>").concat(Gt.WINNING_PRIZE_DETAIL["1st"].toLocaleString(),"</td>\n                        <td>\n                            <span>").concat(ar(this,sr)?ar(this,sr)["1st"]:0,'</span>개\n                        </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <p class="').concat(Xe.rateOfReturnMessage,'">\n                당신의 총 수익률은 <span>').concat(null!==(n=ar(this,ur))&&void 0!==n?n:0,'</span>% 입니다.\n            </p>\n            <button id="reset-button" type="reset" class="').concat(Xe.resetButton,' caption">다시 시작하기</button>\n        </div>\n    ')}},{key:"removeEvent",value:function(){this.off({target:document,eventName:y.openModal},ir(this,lr,mr).bind(this)),this.off({target:En(this,h.modalCloseButton),eventName:"click"},ir(this,fr,Ar).bind(this)),this.off({target:En(this,h.resetButton),eventName:"click"},ir(this,pr,br).bind(this))}},{key:"setEvent",value:function(){this.on({target:document,eventName:y.openModal},ir(this,lr,mr).bind(this)),this.on({target:En(this,h.modalCloseButton),eventName:"click"},ir(this,fr,Ar).bind(this)),this.on({target:En(this,h.resetButton),eventName:"click"},ir(this,pr,br).bind(this))}}])&&Ke(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),a}(j);function mr(n){var t=n.detail,e=t.rateOfReturn,r=t.winningRankResult;or(this,ur,e),or(this,sr,r),this.classList.remove("close"),this.connectedCallback()}function Ar(){this.classList.add("close")}function br(){this.emit(y.reset)}customElements.define("winning-statistics-modal",dr)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aEssT0FBTyxTQUV0QnRELEtBQUsyTyxtQkFDUCxDQUFDLGNBR0MzTyxLQUFLc04sVUFBVUMsSUFBSSxRQUNyQixDQUFDLGNBR0N2TixLQUFLZ08sS0FBSzdHLEVBQWtCSSxNQUM5QixDQUdGZ0MsZUFBZUMsT0FBTywyQkFBNEJzSixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy93ZWIvY29tcG9uZW50cy9Mb3R0b0FwcC9Mb3R0b0FwcC5tb2R1bGUuY3NzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL2NvbXBvbmVudHMvUHVyY2hhc2VkTG90dG8vUHVyY2hhc2VkTG90dG8ubW9kdWxlLmNzcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1B1cmNoYXNlZExvdHRvRm9ybS9QdXJjaGFzZWRMb3R0b0Zvcm0ubW9kdWxlLmNzcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1B1cmNoYXNlZExvdHRvU2VjdGlvbi9QdXJjaGFzZWRMb3R0b1NlY3Rpb24ubW9kdWxlLmNzcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1dpbm5pbmdEZXRhaWxGb3JtL1dpbm5pbmdEZXRhaWxGb3JtLm1vZHVsZS5jc3MiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy93ZWIvY29tcG9uZW50cy9XaW5uaW5nU3RhdGlzdGljc01vZGFsL1dpbm5pbmdTdGF0aXN0aWNzTW9kYWwubW9kdWxlLmNzcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9zdHlsZXMvaW5kZXguY3NzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL3N0eWxlcy9yZXNldC5jc3MiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9zdHlsZXMvcmVzZXQuY3NzP2IyZjQiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy93ZWIvc3R5bGVzL2luZGV4LmNzcz9mOTE4Iiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvY29uc3RhbnRzL3dlYkFwcGxpY2F0aW9uLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL2NvbXBvbmVudHMvQmFzZUNvbXBvbmVudC9CYXNlQ29tcG9uZW50LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL2NvbXBvbmVudHMvTG90dG9BcHAvTG90dG9BcHAubW9kdWxlLmNzcz80OTEwIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL2NvbXBvbmVudHMvTG90dG9BcHAvTG90dG9BcHAuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy93ZWIvY29tcG9uZW50cy9QdXJjaGFzZWRMb3R0b0Zvcm0vUHVyY2hhc2VkTG90dG9Gb3JtLm1vZHVsZS5jc3M/MzIyNCIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3V0aWxzL29iamVjdC9vYmplY3QuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy91dGlscy9yYW5kb20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9kb21haW4vTG90dG8vTG90dG8uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy91dGlscy9hcnJheS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL2RvbWFpbi9Mb3R0b0J1eWVyL0xvdHRvQnV5ZXIuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9lcnJvcnMvQXBwRXJyb3IvQXBwRXJyb3IuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy92YWxpZGF0b3Ivc3RhcnRWYWxpZGF0aW9uLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvdmFsaWRhdG9yL2J1eUxvdHRvUHJpY2UvQnV5TG90dG9QcmljZVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi91dGlscy9kb20uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy93ZWIvdXRpbHMvZXJyb3JNZXNzYWdlLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL2NvbXBvbmVudHMvUHVyY2hhc2VkTG90dG9Gb3JtL1B1cmNoYXNlZExvdHRvRm9ybS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1B1cmNoYXNlZExvdHRvL1B1cmNoYXNlZExvdHRvLm1vZHVsZS5jc3M/OTE2ZiIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1B1cmNoYXNlZExvdHRvL1B1cmNoYXNlZExvdHRvLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL2NvbXBvbmVudHMvUHVyY2hhc2VkTG90dG9TZWN0aW9uL1B1cmNoYXNlZExvdHRvU2VjdGlvbi5tb2R1bGUuY3NzPzAwNmYiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zZXJ2aWNlL0J1eUxvdHRvU2VydmljZS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1B1cmNoYXNlZExvdHRvU2VjdGlvbi9QdXJjaGFzZWRMb3R0b1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy93ZWIvY29tcG9uZW50cy9XaW5uaW5nRGV0YWlsRm9ybS9XaW5uaW5nRGV0YWlsRm9ybS5tb2R1bGUuY3NzP2JhMmEiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9kb21haW4vUmF0ZU9mUmV0dXJuQ2FsY3VsYXRvci9SYXRlT2ZSZXR1cm5DYWxjdWxhdG9yLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvZG9tYWluL1dpbm5pbmdSYW5rL1dpbm5pbmdSYW5rLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc2VydmljZS9XaW5uaW5nUmVzdWx0U2VydmljZS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL2NvbnN0YW50cy9zeW1ib2xzLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvdmFsaWRhdG9yL2NvbW1vbi9Db21tb25WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9jb25zdGFudHMvcmVnZXhwLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvdmFsaWRhdG9yL3dpbm5pbmdOdW1iZXIvV2lubmluZ051bWJlclZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3ZhbGlkYXRvci9ib251c051bWJlci9Cb251c051bWJlclZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1dpbm5pbmdEZXRhaWxGb3JtL1dpbm5pbmdEZXRhaWxGb3JtLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvd2ViL2NvbXBvbmVudHMvV2lubmluZ1N0YXRpc3RpY3NNb2RhbC9XaW5uaW5nU3RhdGlzdGljc01vZGFsLm1vZHVsZS5jc3M/ZDcyMyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3dlYi9jb21wb25lbnRzL1dpbm5pbmdTdGF0aXN0aWNzTW9kYWwvV2lubmluZ1N0YXRpc3RpY3NNb2RhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5qdHlJMDhUc3pBWDBnNTM4Z0FicCB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0ZTViYTY7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG4gIHBhZGRpbmc6IDEuNHJlbTtcXG4gIHBhZGRpbmctbGVmdDogMTAuNnJlbTtcXG59XFxuXFxuLlFzVUM3Q3FYRkdSNm1HZXk4Tk9aIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1hcmdpbjogNi44cmVtIGF1dG87XFxuICBwYWRkaW5nOiAzLjFyZW0gMS41cmVtO1xcbiAgbWF4LXdpZHRoOiA0MS40cmVtO1xcbiAgYm9yZGVyLXJhZGl1czogMC4zcmVtO1xcbiAgaGVpZ2h0OiA3Mi43cmVtO1xcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTtcXG59XFxuXFxuLlJkVXZadjUwTndxVzdDbmZxMjZ6IHtcXG4gIHdpZHRoOiAzOC4ycmVtO1xcbiAgaGVpZ2h0OiAzLjZyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uRmlUeFFIeG5oTHI2bU80YTU0R2Qge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xcbiAgY29sb3I6ICM0ZTViYTY7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogOHJlbTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3dlYi9jb21wb25lbnRzL0xvdHRvQXBwL0xvdHRvQXBwLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxlQUFlO0VBQ2YscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UsY0FBYztFQUNkLGNBQWM7RUFDZCxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLHlDQUF5QztFQUN6QyxjQUFjO0VBQ2QsV0FBVztFQUNYLFlBQVk7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubmF2QmFyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRlNWJhNjtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbiAgcGFkZGluZzogMS40cmVtO1xcbiAgcGFkZGluZy1sZWZ0OiAxMC42cmVtO1xcbn1cXG5cXG4ubWFpbkNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDYuOHJlbSBhdXRvO1xcbiAgcGFkZGluZzogMy4xcmVtIDEuNXJlbTtcXG4gIG1heC13aWR0aDogNDEuNHJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDAuM3JlbTtcXG4gIGhlaWdodDogNzIuN3JlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XFxufVxcblxcbi5tYWluVGl0bGUge1xcbiAgd2lkdGg6IDM4LjJyZW07XFxuICBoZWlnaHQ6IDMuNnJlbTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5mb290ZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xcbiAgY29sb3I6ICM0ZTViYTY7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogOHJlbTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwibmF2QmFyXCI6IFwianR5STA4VHN6QVgwZzUzOGdBYnBcIixcblx0XCJtYWluQ29udGFpbmVyXCI6IFwiUXNVQzdDcVhGR1I2bUdleThOT1pcIixcblx0XCJtYWluVGl0bGVcIjogXCJSZFV2WnY1ME53cVc3Q25mcTI2elwiLFxuXHRcImZvb3RlclwiOiBcIkZpVHhRSHhuaExyNm1PNGE1NEdkXCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm9PSWxUSWtFSV83Z2ZFWU82dkFjIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uaDJMQzJyWkx2YTQ0SUk2SlRxMTcge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXJnaW4tbGVmdDogMC44cmVtO1xcbiAgbWFyZ2luLWJvdHRvbTogMC40cmVtO1xcbn1cXG5cXG4uSFNhYmVueTZUVEk0cjV3U0tUaDAge1xcbiAgcGFkZGluZy1ib3R0b206IDAuMmVtO1xcbiAgZm9udC1zaXplOiAycmVtO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvd2ViL2NvbXBvbmVudHMvUHVyY2hhc2VkTG90dG8vUHVyY2hhc2VkTG90dG8ubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixlQUFlO0FBQ2pCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5wdXJjaGFzZWRMb3R0byB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmxvdHRvTnVtYmVyIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luLWxlZnQ6IDAuOHJlbTtcXG4gIG1hcmdpbi1ib3R0b206IDAuNHJlbTtcXG59XFxuXFxuLnRpY2tldEljb24ge1xcbiAgcGFkZGluZy1ib3R0b206IDAuMmVtO1xcbiAgZm9udC1zaXplOiAycmVtO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJwdXJjaGFzZWRMb3R0b1wiOiBcIm9PSWxUSWtFSV83Z2ZFWU82dkFjXCIsXG5cdFwibG90dG9OdW1iZXJcIjogXCJoMkxDMnJaTHZhNDRJSTZKVHExN1wiLFxuXHRcInRpY2tldEljb25cIjogXCJIU2FiZW55NlRUSTRyNXdTS1RoMFwiXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcInB1cmNoYXNlZC1sb3R0by1mb3JtIHtcXG4gIG1hcmdpbi10b3A6IDIuOHJlbTtcXG59XFxuXFxucHVyY2hhc2VkLWxvdHRvLWZvcm0gPiBmb3JtIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi5Yb2pIU0dvd29HeEFGVGpLUmF1RyB7XFxuICBtYXJnaW4tdG9wOiAwLjRyZW07XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uWWNmR2Q4QnJPU29zRU1xcnZaWUQge1xcbiAgbWFyZ2luLXJpZ2h0OiAxLjNyZW07XFxuICB3aWR0aDogMzFyZW07XFxuICBib3JkZXItcmFkaXVzOiAwLjRyZW07XFxuICBoZWlnaHQ6IDMuNnJlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNiNGI0YjQ7XFxuICBwYWRkaW5nOiAwLjhyZW0gMHJlbSAwLjRyZW0gMC40cmVtO1xcbn1cXG5cXG4uWWNmR2Q4QnJPU29zRU1xcnZaWUQ6OnBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiAjOGI4YjhiO1xcbn1cXG5cXG4uYjBVMHZaVExycFo3Uk5laG9hb3Ige1xcbiAgd2lkdGg6IDUuNnJlbTtcXG4gIGhlaWdodDogMy42cmVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRlNWJhNjtcXG4gIGJvcmRlci1yYWRpdXM6IDAuNHJlbTtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvd2ViL2NvbXBvbmVudHMvUHVyY2hhc2VkTG90dG9Gb3JtL1B1cmNoYXNlZExvdHRvRm9ybS5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsWUFBWTtFQUNaLHFCQUFxQjtFQUNyQixjQUFjO0VBQ2QseUJBQXlCO0VBQ3pCLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsY0FBYztBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJwdXJjaGFzZWQtbG90dG8tZm9ybSB7XFxuICBtYXJnaW4tdG9wOiAyLjhyZW07XFxufVxcblxcbnB1cmNoYXNlZC1sb3R0by1mb3JtID4gZm9ybSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uaW5wdXRDb250YWluZXIge1xcbiAgbWFyZ2luLXRvcDogMC40cmVtO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnB1cmNoYXNlZExvdHRvUHJpY2VJbnB1dCB7XFxuICBtYXJnaW4tcmlnaHQ6IDEuM3JlbTtcXG4gIHdpZHRoOiAzMXJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDAuNHJlbTtcXG4gIGhlaWdodDogMy42cmVtO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2I0YjRiNDtcXG4gIHBhZGRpbmc6IDAuOHJlbSAwcmVtIDAuNHJlbSAwLjRyZW07XFxufVxcblxcbi5wdXJjaGFzZWRMb3R0b1ByaWNlSW5wdXQ6OnBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiAjOGI4YjhiO1xcbn1cXG5cXG4ucHVyY2hhc2VkQnV0dG9uIHtcXG4gIHdpZHRoOiA1LjZyZW07XFxuICBoZWlnaHQ6IDMuNnJlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0ZTViYTY7XFxuICBib3JkZXItcmFkaXVzOiAwLjRyZW07XFxuICBjb2xvcjogI2ZmZmZmZjtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiaW5wdXRDb250YWluZXJcIjogXCJYb2pIU0dvd29HeEFGVGpLUmF1R1wiLFxuXHRcInB1cmNoYXNlZExvdHRvUHJpY2VJbnB1dFwiOiBcIlljZkdkOEJyT1Nvc0VNcXJ2WllEXCIsXG5cdFwicHVyY2hhc2VkQnV0dG9uXCI6IFwiYjBVMHZaVExycFo3Uk5laG9hb3JcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuckdHdzUxMk9keUlHQ2Qxa3pNajkge1xcbiAgbWFyZ2luLXRvcDogMi44cmVtO1xcbiAgbWFyZ2luLWJvdHRvbTogMC44cmVtO1xcbn1cXG5cXG4uWkVPNTFMWHNmSnhDeWh3YXhiMjIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy93ZWIvY29tcG9uZW50cy9QdXJjaGFzZWRMb3R0b1NlY3Rpb24vUHVyY2hhc2VkTG90dG9TZWN0aW9uLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsV0FBVztFQUNYLHFCQUFxQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucHVyY2hhc2VkTWVzc2FnZSB7XFxuICBtYXJnaW4tdG9wOiAyLjhyZW07XFxuICBtYXJnaW4tYm90dG9tOiAwLjhyZW07XFxufVxcblxcbi5wdXJjaGFzZWRMb3R0b3Mge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcInB1cmNoYXNlZE1lc3NhZ2VcIjogXCJyR0d3NTEyT2R5SUdDZDFrek1qOVwiLFxuXHRcInB1cmNoYXNlZExvdHRvc1wiOiBcIlpFTzUxTFhzZkp4Q3lod2F4YjIyXCJcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLl9pYkRzU1U4dkYwMGNqVDFFc2FLIHtcXG4gIGhlaWdodDogMjAuN3JlbTtcXG4gIG1hcmdpbi10b3A6IDIuNHJlbTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiAxcmVtO1xcbn1cXG5cXG4uTDlhQjlkclZINjRCckM0NXBnS2kge1xcbiAgd2lkdGg6IDMuNHJlbTtcXG4gIGhlaWdodDogMy42cmVtO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2I0YjRiNDtcXG4gIGJvcmRlci1yYWRpdXM6IDAuNHJlbTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLnhWU0ZWeTE4MG5ucExyUDY0VzB6IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5UNGo4Nl85VzNPdFFmMG9ZaDRWciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWFyZ2luLXRvcDogMC44cmVtO1xcbiAgZ2FwOiAwLjhyZW07XFxufVxcblxcbi5scmhiRXZHaFRMTFFvM3A2UUNfcyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gIGdhcDogMC44cmVtO1xcbn1cXG5cXG4uQWFxOURtN1M5NTd6b3lEcHc5dnQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRlNWJhNjtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbiAgbWFyZ2luLXRvcDogMS43cmVtO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgcGFkZGluZzogMC40cmVtIDA7XFxuICBib3JkZXItcmFkaXVzOiAwLjRyZW07XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBoZWlnaHQ6IDMuNnJlbTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3dlYi9jb21wb25lbnRzL1dpbm5pbmdEZXRhaWxGb3JtL1dpbm5pbmdEZXRhaWxGb3JtLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztBQUNYOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGNBQWM7RUFDZCx5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIscUJBQXFCO0VBQ3JCLGVBQWU7RUFDZixjQUFjO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi53aW5uaW5nRGV0YWlsRm9ybSB7XFxuICBoZWlnaHQ6IDIwLjdyZW07XFxuICBtYXJnaW4tdG9wOiAyLjRyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMXJlbTtcXG59XFxuXFxuLm51bWJlcklucHV0IHtcXG4gIHdpZHRoOiAzLjRyZW07XFxuICBoZWlnaHQ6IDMuNnJlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNiNGI0YjQ7XFxuICBib3JkZXItcmFkaXVzOiAwLjRyZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5udW1iZXJzSW5wdXRDb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLndpbm5pbmdOdW1iZXJJbnB1dENvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWFyZ2luLXRvcDogMC44cmVtO1xcbiAgZ2FwOiAwLjhyZW07XFxufVxcblxcbi5ib251c051bWJlckNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gIGdhcDogMC44cmVtO1xcbn1cXG5cXG4uc3VibWl0QnV0dG9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0ZTViYTY7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG4gIG1hcmdpbi10b3A6IDEuN3JlbTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIHBhZGRpbmc6IDAuNHJlbSAwO1xcbiAgYm9yZGVyLXJhZGl1czogMC40cmVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgaGVpZ2h0OiAzLjZyZW07XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIndpbm5pbmdEZXRhaWxGb3JtXCI6IFwiX2liRHNTVTh2RjAwY2pUMUVzYUtcIixcblx0XCJudW1iZXJJbnB1dFwiOiBcIkw5YUI5ZHJWSDY0QnJDNDVwZ0tpXCIsXG5cdFwibnVtYmVyc0lucHV0Q29udGFpbmVyXCI6IFwieFZTRlZ5MTgwbm5wTHJQNjRXMHpcIixcblx0XCJ3aW5uaW5nTnVtYmVySW5wdXRDb250YWluZXJcIjogXCJUNGo4Nl85VzNPdFFmMG9ZaDRWclwiLFxuXHRcImJvbnVzTnVtYmVyQ29udGFpbmVyXCI6IFwibHJoYkV2R2hUTExRbzNwNlFDX3NcIixcblx0XCJzdWJtaXRCdXR0b25cIjogXCJBYXE5RG03Uzk1N3pveURwdzl2dFwiXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIndpbm5pbmctc3RhdGlzdGljcy1tb2RhbCB7XFxuICBvcGFjaXR5OiAxO1xcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDA7XFxuICByaWdodDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7XFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG4uUFJFdll4c2pOaDJWVnJIcU5TV2Uge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWF4LXdpZHRoOiAzNXJlbTtcXG4gIHRyYW5zaXRpb246IHRvcCAwLjI1cyBlYXNlO1xcbiAgaGVpZ2h0OiA1MHJlbTtcXG4gIG1hcmdpbjogYXV0bztcXG4gIG92ZXJmbG93OiBhdXRvO1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmc6IDByZW0gMS42cmVtO1xcbn1cXG5cXG4uVEN3RWxjY0drdjNCSmxXNW1KalEge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMnJlbTtcXG4gIHdpZHRoOiAycmVtO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDByZW07XFxuICB0b3A6IDByZW07XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5FcWFabHFJSkNxYXp3UkMza2JaTyB7XFxuICBzdHJva2U6ICMwMDAwMDA7XFxuICBmaWxsOiB0cmFuc3BhcmVudDtcXG4gIHN0cm9rZS13aWR0aDogNTtcXG59XFxuXFxuc3ZnIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4uVGVMSHAzQkRTazlMTWhvaTlPTEsge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4ucUNWQWFBbTRsdkoxem85ZjFQZ0wge1xcbiAgcGFkZGluZy1ib3R0b206IDJyZW07XFxufVxcblxcbi5EVlJudXhlT1RKSUhRUFVQZ3JCdyB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5KZklHeWxQc2RDcGw1b1RnQ0NkViB7XFxuICB3aWR0aDogMzEuOHJlbTtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLmhwR1lQNTFUbWRYVWM5UWxFblBLIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbjogMy4ycmVtIDByZW07XFxuICBmb250LXNpemU6IDEuNXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi5VYlVpTTUzVl9CZ3VWajJneGx6NSB7XFxuICBoZWlnaHQ6IDMuNnJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDAuNHJlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0ZTViYTY7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG59XFxuXFxudGJvZHksXFxudGhlYWQge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbnRoLFxcbnRkIHtcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcbiAgcGFkZGluZzogMXJlbTtcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGNkY2RjO1xcbn1cXG5cXG50aCB7XFxuICBib3JkZXItdG9wOiAwLjFyZW0gc29saWQgI2RjZGNkYztcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy93ZWIvY29tcG9uZW50cy9XaW5uaW5nU3RhdGlzdGljc01vZGFsL1dpbm5pbmdTdGF0aXN0aWNzTW9kYWwubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFVBQVU7RUFDVixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLGVBQWU7RUFDZixNQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVM7RUFDVCxPQUFPO0VBQ1AsOEJBQThCO0VBQzlCLDhCQUE4QjtFQUM5QixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQixhQUFhO0VBQ2IsWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFNBQVM7RUFDVCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QscUJBQXFCO0VBQ3JCLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOztBQUVBOztFQUVFLFdBQVc7QUFDYjs7QUFFQTs7RUFFRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGdDQUFnQztFQUNoQyxpQkFBaUI7RUFDakIsaUJBQWlCO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIndpbm5pbmctc3RhdGlzdGljcy1tb2RhbCB7XFxuICBvcGFjaXR5OiAxO1xcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDA7XFxuICByaWdodDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7XFxuICB6LWluZGV4OiAyO1xcbn1cXG5cXG4ubW9kYWxJbm5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBtYXgtd2lkdGg6IDM1cmVtO1xcbiAgdHJhbnNpdGlvbjogdG9wIDAuMjVzIGVhc2U7XFxuICBoZWlnaHQ6IDUwcmVtO1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgcGFkZGluZzogMHJlbSAxLjZyZW07XFxufVxcblxcbi5tb2RhbENsb3NlQnV0dG9uIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDJyZW07XFxuICB3aWR0aDogMnJlbTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAwcmVtO1xcbiAgdG9wOiAwcmVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubW9kYWxDbG9zZUljb24ge1xcbiAgc3Ryb2tlOiAjMDAwMDAwO1xcbiAgZmlsbDogdHJhbnNwYXJlbnQ7XFxuICBzdHJva2Utd2lkdGg6IDU7XFxufVxcblxcbnN2ZyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLnRleHRDZW50ZXIge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4udGl0bGUge1xcbiAgcGFkZGluZy1ib3R0b206IDJyZW07XFxufVxcblxcbi50YWJsZUNvbnRhaW5lciB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5yZXN1bHRUYWJsZSB7XFxuICB3aWR0aDogMzEuOHJlbTtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLnJhdGVPZlJldHVybk1lc3NhZ2Uge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbWFyZ2luOiAzLjJyZW0gMHJlbTtcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLnJlc2V0QnV0dG9uIHtcXG4gIGhlaWdodDogMy42cmVtO1xcbiAgYm9yZGVyLXJhZGl1czogMC40cmVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRlNWJhNjtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbn1cXG5cXG50Ym9keSxcXG50aGVhZCB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxudGgsXFxudGQge1xcbiAgZm9udC1zaXplOiAxLjVyZW07XFxuICBwYWRkaW5nOiAxcmVtO1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkY2RjZGM7XFxufVxcblxcbnRoIHtcXG4gIGJvcmRlci10b3A6IDAuMXJlbSBzb2xpZCAjZGNkY2RjO1xcbiAgZm9udC1zaXplOiAxLjVyZW07XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwibW9kYWxJbm5lclwiOiBcIlBSRXZZeHNqTmgyVlZySHFOU1dlXCIsXG5cdFwibW9kYWxDbG9zZUJ1dHRvblwiOiBcIlRDd0VsY2NHa3YzQkpsVzVtSmpRXCIsXG5cdFwibW9kYWxDbG9zZUljb25cIjogXCJFcWFabHFJSkNxYXp3UkMza2JaT1wiLFxuXHRcInRleHRDZW50ZXJcIjogXCJUZUxIcDNCRFNrOUxNaG9pOU9MS1wiLFxuXHRcInRpdGxlXCI6IFwicUNWQWFBbTRsdkoxem85ZjFQZ0xcIixcblx0XCJ0YWJsZUNvbnRhaW5lclwiOiBcIkRWUm51eGVPVEpJSFFQVVBnckJ3XCIsXG5cdFwicmVzdWx0VGFibGVcIjogXCJKZklHeWxQc2RDcGw1b1RnQ0NkVlwiLFxuXHRcInJhdGVPZlJldHVybk1lc3NhZ2VcIjogXCJocEdZUDUxVG1kWFVjOVFsRW5QS1wiLFxuXHRcInJlc2V0QnV0dG9uXCI6IFwiVWJVaU01M1ZfQmd1VmoyZ3hsejVcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJodG1sIHtcXG4gIGZvbnQtc2l6ZTogMTBweDtcXG59XFxuXFxuLnRpdGxlIHtcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICBmb250LXNpemU6IDIuNHJlbTtcXG59XFxuXFxuLnN1YnRpdGxlIHtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBmb250LXNpemU6IDJyZW07XFxufVxcblxcbi5ib2R5LFxcbi5wbGFjZWhvbGRlciB7XFxuICBmb250LXdlaWdodDogMzAwO1xcbiAgZm9udC1zaXplOiAxLjVyZW07XFxufVxcblxcbi5idXR0b24sXFxuLmNhcHRpb24ge1xcbiAgbGluZS1oZWlnaHQ6IDAuMTI1cmVtO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMS40cmVtO1xcbn1cXG5cXG4uZXJyb3ItbWVzc2FnZSB7XFxuICBjb2xvcjogcmVkO1xcbiAgbWFyZ2luLXRvcDogMC44cmVtO1xcbiAgZm9udC1zaXplOiAxLjJyZW07XFxufVxcblxcbi5jbG9zZSB7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbi8qIENocm9tZSwgU2FmYXJpLCBFZGdlLCBPcGVyYSAqL1xcbmlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLFxcbmlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLyogRmlyZWZveCAqL1xcbmlucHV0W3R5cGU9J251bWJlciddIHtcXG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvd2ViL3N0eWxlcy9pbmRleC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBOztFQUVFLGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkI7O0FBRUE7O0VBRUUscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQSxnQ0FBZ0M7QUFDaEM7O0VBRUUsd0JBQXdCO0VBQ3hCLFNBQVM7QUFDWDs7QUFFQSxZQUFZO0FBQ1o7RUFDRSwwQkFBMEI7QUFDNUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCB7XFxuICBmb250LXNpemU6IDEwcHg7XFxufVxcblxcbi50aXRsZSB7XFxuICBmb250LXdlaWdodDogODAwO1xcbiAgZm9udC1zaXplOiAyLjRyZW07XFxufVxcblxcbi5zdWJ0aXRsZSB7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgZm9udC1zaXplOiAycmVtO1xcbn1cXG5cXG4uYm9keSxcXG4ucGxhY2Vob2xkZXIge1xcbiAgZm9udC13ZWlnaHQ6IDMwMDtcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcbn1cXG5cXG4uYnV0dG9uLFxcbi5jYXB0aW9uIHtcXG4gIGxpbmUtaGVpZ2h0OiAwLjEyNXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LXNpemU6IDEuNHJlbTtcXG59XFxuXFxuLmVycm9yLW1lc3NhZ2Uge1xcbiAgY29sb3I6IHJlZDtcXG4gIG1hcmdpbi10b3A6IDAuOHJlbTtcXG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xcbn1cXG5cXG4uY2xvc2Uge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4vKiBDaHJvbWUsIFNhZmFyaSwgRWRnZSwgT3BlcmEgKi9cXG5pbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcXG5pbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi8qIEZpcmVmb3ggKi9cXG5pbnB1dFt0eXBlPSdudW1iZXInXSB7XFxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgZm9udDogaW5oZXJpdDtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbn1cXG4qLFxcbjphZnRlcixcXG46YmVmb3JlIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbjpyb290IHtcXG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XFxuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XFxuICAtbW96LXRhYi1zaXplOiA0O1xcbiAgdGFiLXNpemU6IDQ7XFxufVxcbmh0bWwsXFxuYm9keSB7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbmltZyxcXG5waWN0dXJlLFxcbnZpZGVvLFxcbmNhbnZhcyxcXG5zdmcge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxufVxcbmJ1dHRvbiB7XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbiAgYm9yZGVyOiAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5hIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxudGFibGUge1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvd2ViL3N0eWxlcy9yZXNldC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLGFBQWE7RUFDYixjQUFjO0FBQ2hCO0FBQ0E7OztFQUdFLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0Usd0NBQXdDO0VBQ3hDLDhCQUE4QjtFQUM5QixzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQix5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjtBQUNBOztFQUVFLFlBQVk7QUFDZDtBQUNBOzs7OztFQUtFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsU0FBUztFQUNULGVBQWU7QUFDakI7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLGlCQUFpQjtBQUNuQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBmb250OiBpbmhlcml0O1xcbiAgY29sb3I6IGluaGVyaXQ7XFxufVxcbiosXFxuOmFmdGVyLFxcbjpiZWZvcmUge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuOnJvb3Qge1xcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcXG4gIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBsaW5lLWhlaWdodDogMS41O1xcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcXG4gIC1tb3otdGFiLXNpemU6IDQ7XFxuICB0YWItc2l6ZTogNDtcXG59XFxuaHRtbCxcXG5ib2R5IHtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuaW1nLFxcbnBpY3R1cmUsXFxudmlkZW8sXFxuY2FudmFzLFxcbnN2ZyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIG1heC13aWR0aDogMTAwJTtcXG59XFxuYnV0dG9uIHtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxuICBib3JkZXI6IDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbmEge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG50YWJsZSB7XFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzZXQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGNvbnN0IENVU1RPTV9FVkVOVF9UWVBFID0gT2JqZWN0LmZyZWV6ZSh7XG4gIGJ1eUxvdHRvUHJpY2U6ICdidXlMb3R0b1ByaWNlJyxcbiAgb3Blbk1vZGFsOiAnb3Blbk1vZGFsJyxcbiAgcmVzZXQ6ICdyZXNldCcsXG59KTtcblxuZXhwb3J0IGNvbnN0IENPTVBPTkVOVF9TRUxFQ1RPUiA9IE9iamVjdC5mcmVlemUoe1xuICBlcnJvck1lc3NhZ2U6ICcuZXJyb3ItbWVzc2FnZScsXG4gIHB1cmNoYXNlZExvdHRvRm9ybTogJyNwdXJjaGFzZWQtbG90dG8tZm9ybScsXG4gIHB1cmNoYXNlZExvdHRvSW5wdXQ6ICcjcHVyY2hhc2VkLWxvdHRvLWlucHV0JyxcbiAgd2lubmluZ0RldGFpbEZvcm06ICcjd2lubmluZy1kZXRhaWwtZm9ybScsXG4gIHdpbm5pbmdOdW1iZXJJbnB1dHM6ICcud2lubmluZy1udW1iZXInLFxuICBib251c051bWJlcklucHV0OiAnI2JvbnVzLW51bWJlci1pbnB1dCcsXG4gIHB1cmNoYXNlZExvdHRvU2VjdGlvbjogJ3B1cmNoYXNlZC1sb3R0by1zZWN0aW9uJyxcbiAgbW9kYWxDbG9zZUJ1dHRvbjogJyNtb2RhbC1jbG9zZS1idXR0b24nLFxuICByZXNldEJ1dHRvbjogJyNyZXNldC1idXR0b24nLFxufSk7XG4iLCJjbGFzcyBCYXNlQ29tcG9uZW50IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLnJlbmRlcigpO1xuICAgIHRoaXMuc2V0RXZlbnQoKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMucmVtb3ZlRXZlbnQoKTtcbiAgfVxuXG4gIHJlbmRlcigpIHt9XG5cbiAgc2V0RXZlbnQoKSB7fVxuXG4gIHJlbW92ZUV2ZW50KCkge31cblxuICBnZXRUZW1wbGF0ZSgpIHt9XG5cbiAgZW1pdChldmVudFR5cGUsIGRldGFpbCkge1xuICAgIGNvbnN0IGN1c3RvbUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KGV2ZW50VHlwZSwge1xuICAgICAgYnViYmxlczogdHJ1ZSxcbiAgICAgIGRldGFpbCxcbiAgICB9KTtcblxuICAgIHRoaXMuZGlzcGF0Y2hFdmVudChjdXN0b21FdmVudCk7XG4gIH1cblxuICBvbih7IHRhcmdldCwgZXZlbnROYW1lIH0sIGV2ZW50SGFuZGxlcikge1xuICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZXZlbnRIYW5kbGVyKTtcbiAgfVxuXG4gIG9mZih7IHRhcmdldCwgZXZlbnROYW1lIH0sIGV2ZW50SGFuZGxlcikge1xuICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZXZlbnRIYW5kbGVyKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlQ29tcG9uZW50O1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0xvdHRvQXBwLm1vZHVsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0xvdHRvQXBwLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBDVVNUT01fRVZFTlRfVFlQRSB9IGZyb20gJy4uLy4uLy4uL2NvbnN0YW50cy93ZWJBcHBsaWNhdGlvbi5qcyc7XG5pbXBvcnQgQmFzZUNvbXBvbmVudCBmcm9tICcuLi9CYXNlQ29tcG9uZW50L0Jhc2VDb21wb25lbnQuanMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL0xvdHRvQXBwLm1vZHVsZS5jc3MnO1xuXG5jbGFzcyBMb3R0b0FwcCBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgdGhpcy5pbm5lckhUTUwgPSBgXG4gICAgICAgIDxoZWFkZXIgY2xhc3M9JHtzdHlsZXMubmF2QmFyfT5cbiAgICAgICAgICA8aDEgY2xhc3M9XCJ0aXRsZVwiPvCfjrEg7ZaJ7Jq07J2YIOuhnOuYkDwvaDE+XG4gICAgICAgIDwvaGVhZGVyPlxuICAgICAgICA8bWFpbiBjbGFzcz0ke3N0eWxlcy5tYWluQ29udGFpbmVyfT5cbiAgICAgICAgICA8aDIgY2xhc3M9XCIke3N0eWxlcy5tYWluVGl0bGV9IHRpdGxlXCI+8J+OsSDrgrQg67KI7Zi4IOuLueyyqCDtmZXsnbgg8J+OsTwvaDI+XG4gICAgICAgICAgPHB1cmNoYXNlZC1sb3R0by1mb3JtPjwvcHVyY2hhc2VkLWxvdHRvLWZvcm0+XG4gICAgICAgICAgPHB1cmNoYXNlZC1sb3R0by1zZWN0aW9uIGNsYXNzPVwiY2xvc2VcIj48L3B1cmNoYXNlZC1sb3R0by1zZWN0aW9uPlxuICAgICAgICAgIDx3aW5uaW5nLWRldGFpbC1mb3JtIGNsYXNzPVwiY2xvc2VcIj48L3dpbm5pbmctZGV0YWlsLWZvcm0+XG4gICAgICAgIDwvbWFpbj5cbiAgICAgICAgPGZvb3RlciBjbGFzcz0ke3N0eWxlcy5mb290ZXJ9PlxuICAgICAgICAgIDxwIGNsYXNzPVwiY2FwdGlvblwiPiZjb3B5O0NvcHlyaWdodCAyMDIzLiB3b293YWNvdXJzZTwvcD5cbiAgICAgICAgPC9mb290ZXI+XG4gICAgICAgIDx3aW5uaW5nLXN0YXRpc3RpY3MtbW9kYWwgY2xhc3M9XCJjbG9zZVwiPjwvd2lubmluZy1zdGF0aXN0aWNzLW1vZGFsPlxuICAgIGA7XG4gIH1cblxuICBzZXRFdmVudCgpIHtcbiAgICB0aGlzLm9uKFxuICAgICAgeyB0YXJnZXQ6IGRvY3VtZW50LCBldmVudE5hbWU6IENVU1RPTV9FVkVOVF9UWVBFLnJlc2V0IH0sXG4gICAgICB0aGlzLiNoYW5kbGVSZW5kZXJMb3R0b0FwcC5iaW5kKHRoaXMpLFxuICAgICk7XG4gIH1cblxuICByZW1vdmVFdmVudCgpIHtcbiAgICB0aGlzLm9mZihcbiAgICAgIHsgdGFyZ2V0OiBkb2N1bWVudCwgZXZlbnROYW1lOiBDVVNUT01fRVZFTlRfVFlQRS5yZXNldCB9LFxuICAgICAgdGhpcy4jaGFuZGxlUmVuZGVyTG90dG9BcHAuYmluZCh0aGlzKSxcbiAgICApO1xuICB9XG5cbiAgI2hhbmRsZVJlbmRlckxvdHRvQXBwKCkge1xuICAgIHRoaXMucmVuZGVyKCk7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdsb3R0by1hcHAnLCBMb3R0b0FwcCk7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUHVyY2hhc2VkTG90dG9Gb3JtLm1vZHVsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1B1cmNoYXNlZExvdHRvRm9ybS5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiLyoqXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqZWN0IC0g6rCd7LK0XG4gKiBAcmV0dXJucyB7b2JqZWN0fSDrj5nqsrDrkJwg6rCd7LK0XG4gKi9cbmV4cG9ydCBjb25zdCBkZWVwRnJlZXplID0gKG9iamVjdCkgPT4ge1xuICBjb25zdCBwcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmplY3QpO1xuXG4gIHByb3BOYW1lcy5mb3JFYWNoKChuYW1lKSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSBvYmplY3RbbmFtZV07XG5cbiAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgZGVlcEZyZWV6ZSh2YWx1ZSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIE9iamVjdC5mcmVlemUob2JqZWN0KTtcbn07XG4iLCJpbXBvcnQgeyBkZWVwRnJlZXplIH0gZnJvbSAnLi9vYmplY3Qvb2JqZWN0LmpzJztcblxuLyoqXG4gKiBAbW9kdWxlIFJhbmRvbVxuICog656c642kIOqwkuuTpOyXkCDrjIDtlZwg7Jew7IKw7J2EIOuLtOuLue2VmOuKlCDsnKDti7jrpqzti7Ag66qo65OIXG4gKi9cbmNvbnN0IFJhbmRvbSA9IGRlZXBGcmVlemUoe1xuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IG1heFZhbHVlIC0gc2h1ZmZsZe2VoCDqsIDsnqUg7YGwIOqwklxuICAgKiBAcmV0dXJucyB7bnVtYmVyW119IOustOyekeychOuhnCDshJ7snbgg7Iir7J6QIOuwsOyXtFxuICAgKi9cbiAgc2h1ZmZsZShtYXhWYWx1ZSkge1xuICAgIGNvbnN0IHNlbGVjdGFibGVOdW1iZXJzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogbWF4VmFsdWUgfSwgKF8sIGkpID0+IGkgKyAxKTtcbiAgICBjb25zdCBzaHVmZmxlZEFycmF5ID0gW107XG5cbiAgICB3aGlsZSAoc2VsZWN0YWJsZU51bWJlcnMubGVuZ3RoICE9PSAwKSB7XG4gICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHNlbGVjdGFibGVOdW1iZXJzLmxlbmd0aCk7XG4gICAgICBjb25zdCByYW5kb21WYWx1ZUluQXJyYXkgPSBzZWxlY3RhYmxlTnVtYmVycy5zcGxpY2UocmFuZG9tSW5kZXgsIDEpWzBdO1xuXG4gICAgICBzaHVmZmxlZEFycmF5LnB1c2gocmFuZG9tVmFsdWVJbkFycmF5KTtcbiAgICB9XG5cbiAgICByZXR1cm4gc2h1ZmZsZWRBcnJheTtcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHt7c3RhcnQgOiBudW1iZXIsIGVuZCA6IG51bWJlciwgY291bnQgOiBudW1iZXJ9fSBudW1iZXJEZXRhaWxzIC0g7Iuc7J6RIOuyiO2YuCwg64GdIOuyiO2YuCwg67Cw7Je0IOq4uOydtOqwgCDri7TquLQg6rCd7LK0XG4gICAqIEByZXR1cm5zIHtudW1iZXJbXX0gc3RhcnQgfiBlbmQg7IKs7J207J2YIOuenOuNpCDqsJLsnbQg64u06ri0IOuwsOyXtFxuICAgKi9cbiAgcGlja1VuaXF1ZU51bWJlcnNJblJhbmdlKHsgZW5kLCBjb3VudCB9KSB7XG4gICAgcmV0dXJuIHRoaXMuc2h1ZmZsZShlbmQpLnNsaWNlKDAsIGNvdW50KTtcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBSYW5kb207XG4iLCJpbXBvcnQgeyBzb3J0QnlBc2NlbmRpbmcgfSBmcm9tICcuLi8uLi91dGlscy9hcnJheS5qcyc7XG5pbXBvcnQgUmFuZG9tIGZyb20gJy4uLy4uL3V0aWxzL3JhbmRvbS5qcyc7XG5cbmNsYXNzIExvdHRvIHtcbiAgc3RhdGljIExPVFRPX1JVTEUgPSB7XG4gICAgbWluOiAxLFxuICAgIG1heDogNDUsXG4gICAgY291bnQ6IDYsXG4gIH07XG5cbiAgLyoqXG4gICAqIOygleyggSDtjKnthqDrpqwg66mU7ISc65OcKOunpOqwnOuzgOyImCAx6rCcKVxuICAgKiBAcmV0dXJucyB7TG90dG99IOuhnOuYkCDsnbjsiqTthLTsiqRcbiAgICovXG4gIHN0YXRpYyBmcm9tKCkge1xuICAgIHJldHVybiBuZXcgTG90dG8oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7aW1wb3J0KCcuLi8uLi90eXBlcy9qc0RvYy5qcycpLkxvdHRvTnVtYmVyfSAxIH4gNDXsnZgg6rCS65Ok7J20IDbqsJwg64u06ri0IOyIq+yekCDrsLDsl7RcbiAgICovXG4gIGNyZWF0ZU51bWJlcigpIHtcbiAgICBjb25zdCBsb3R0b051bWJlciA9IFJhbmRvbS5waWNrVW5pcXVlTnVtYmVyc0luUmFuZ2Uoe1xuICAgICAgc3RhcnQ6IExvdHRvLkxPVFRPX1JVTEUubWluLFxuICAgICAgZW5kOiBMb3R0by5MT1RUT19SVUxFLm1heCxcbiAgICAgIGNvdW50OiBMb3R0by5MT1RUT19SVUxFLmNvdW50LFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHNvcnRCeUFzY2VuZGluZyhsb3R0b051bWJlcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG90dG87XG4iLCIvKipcbiAqIEBwYXJhbSB7bnVtYmVyW119IG51bWJlcnMgLSDsiKvsnpAg65Ok7J20IOyeiOuKlCDrsLDsl7RcbiAqIEByZXR1cm5zIHtudW1iZXJbXX0g7Jik66aE7LCo7Iic7Jy866GcIOygleugrOuQnCDsiKvsnpAg67Cw7Je0XG4gKi9cbmV4cG9ydCBjb25zdCBzb3J0QnlBc2NlbmRpbmcgPSAobnVtYmVycykgPT4gbnVtYmVycy5zb3J0KChudW1iZXJBLCBudW1iZXJCKSA9PiBudW1iZXJBIC0gbnVtYmVyQik7XG4iLCJpbXBvcnQgTG90dG8gZnJvbSAnLi4vTG90dG8vTG90dG8uanMnO1xuXG4vKipcbiAqIEBtb2R1bGUgTG90dG9CdXllclxuICog66Gc65iQIOq1rOunpCDquIjslaEg66eM7YG87J2YIOuhnOuYkOulvCDqtazrp6TtlZjripQg7Jet7ZWg7J2EIOyImO2Wie2VmOuKlCDrj4TrqZTsnbgg66qo65OIXG4gKi9cbmNsYXNzIExvdHRvQnV5ZXIge1xuICBzdGF0aWMgTE9UVE9fUFJJQ0VfUEVSX1VOSVQgPSAxMDAwO1xuXG4gIHN0YXRpYyBCVVlfTE9UVE9fUFJJQ0VfUkFOR0UgPSBPYmplY3QuZnJlZXplKHtcbiAgICBtaW46IDEwMDAsXG4gICAgbWF4OiAxMDAwMCxcbiAgfSk7XG5cbiAgI2J1ZGdldDtcblxuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IGJ1eUxvdHRvUHJpY2UgLSDroZzrmJAg6rWs7J6FIOq4iOyVoVxuICAgKi9cbiAgY29uc3RydWN0b3IoYnV5TG90dG9QcmljZSkge1xuICAgIHRoaXMuI2J1ZGdldCA9IGJ1eUxvdHRvUHJpY2U7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge2ltcG9ydCgnLi4vLi4vdHlwZXMvanNEb2MuanMnKS5Mb3R0b051bWJlcltdfSDqtazrp6Qg6riI7JWhIOunjO2BvOydmCDroZzrmJAg67KI7Zi47Je0XG4gICAqL1xuICBwdXJjaGFzZSgpIHtcbiAgICBjb25zdCBsb3R0b0NvdW50ID0gdGhpcy4jYnVkZ2V0IC8gTG90dG9CdXllci5MT1RUT19QUklDRV9QRVJfVU5JVDtcblxuICAgIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBsb3R0b0NvdW50IH0sICgpID0+IExvdHRvLmZyb20oKS5jcmVhdGVOdW1iZXIoKSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG90dG9CdXllcjtcbiIsIi8qKlxuICogQG1vZHVsZSBBcHBFcnJvclxuICogJ+ydvOq0gOuQnCDsl5Drn6wg66mU7Iuc7KeAIOygnOqztSfsnZgg7Jet7ZWg7J2EIOyImO2WiVxuICovXG5jbGFzcyBBcHBFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgLyoqXG4gICAqIEBzdGF0aWNcbiAgICogQHB1YmxpY1xuICAgKiBAY29uc3RhbnRcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIHN0YXRpYyBQUkVGSVggPSAnW0VSUk9SXSc7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIC0g7JeQ65+sIOuplOyLnOyngFxuICAgKi9cbiAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgIHN1cGVyKGBcXG4ke0FwcEVycm9yLlBSRUZJWH0gJHttZXNzYWdlfVxcbmApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcEVycm9yO1xuIiwiaW1wb3J0IEFwcEVycm9yIGZyb20gJy4uL2Vycm9ycy9BcHBFcnJvci9BcHBFcnJvci5qcyc7XG5cbi8qKlxuICogQHBhcmFtIHtvYmplY3R9IHZhbGlkYXRpb25UeXBlcyAtIOycoO2aqOyEsSDqsoDsgqzrpbwg6rKA7IKs7ZWgIOqwneyytFxuICogQHBhcmFtIHt1bmtub3dufSB2YWx1ZSAtIOyeheugpSDqsJJcbiAqIEB0aHJvd3Mge0FwcEVycm9yfVxuICovXG5leHBvcnQgY29uc3Qgc3RhcnRWYWxpZGF0aW9uID0gKHZhbGlkYXRpb25UeXBlcywgdmFsdWUpID0+IHtcbiAgT2JqZWN0LnZhbHVlcyh2YWxpZGF0aW9uVHlwZXMpLmZvckVhY2goKHsgZXJyb3JNZXNzYWdlLCBpc1ZhbGlkIH0pID0+IHtcbiAgICBpZiAoIWlzVmFsaWQodmFsdWUpKSB0aHJvdyBuZXcgQXBwRXJyb3IoZXJyb3JNZXNzYWdlKTtcbiAgfSk7XG59O1xuIiwiaW1wb3J0IExvdHRvQnV5ZXIgZnJvbSAnLi4vLi4vZG9tYWluL0xvdHRvQnV5ZXIvTG90dG9CdXllci5qcyc7XG5cbmltcG9ydCB7IHN0YXJ0VmFsaWRhdGlvbiB9IGZyb20gJy4uL3N0YXJ0VmFsaWRhdGlvbi5qcyc7XG5cbmltcG9ydCB7IGRlZXBGcmVlemUgfSBmcm9tICcuLi8uLi91dGlscy9vYmplY3Qvb2JqZWN0LmpzJztcblxuY29uc3QgeyBCVVlfTE9UVE9fUFJJQ0VfUkFOR0UsIExPVFRPX1BSSUNFX1BFUl9VTklUIH0gPSBMb3R0b0J1eWVyO1xuXG4vKipcbiAqIEBtb2R1bGUgQnV5TG90dG9QcmljZVZhbGlkYXRvclxuICogQHR5cGUge2ltcG9ydCgnLi4vLi4vdHlwZXMvanNEb2MuanMnKS5CdXlMb3R0b1ByaWNlVmFsaWRhdG9yfVxuICog66Gc65iQIOq1rOyehSDquIjslaEg7J6F66Cl7JeQIOuMgO2VnCDsnKDtmqjshLEg6rKA7IKs66W8IOyImO2Wie2VmOuKlCDrqqjrk4hcbiAqL1xuY29uc3QgQnV5TG90dG9QcmljZVZhbGlkYXRvciA9IGRlZXBGcmVlemUoe1xuICB2YWxpZGF0aW9uVHlwZXM6IHtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7aW1wb3J0KCcuLi8uLi90eXBlcy9qc0RvYy5qcycpLkJ1eUxvdHRvUHJpY2VWYWxpZGF0aW9uVHlwZXN9XG4gICAgICovXG4gICAgaXNUeXBlT2ZOdW1iZXI6IHtcbiAgICAgIGVycm9yTWVzc2FnZTogJ+uhnOuYkCDqtazsnoUg6riI7JWh7J2YIO2YleyLneydtCDsmKzrsJTrpbTsp4Ag7JWK7Iq164uI64ukLiDri6Tsi5wg7J6F66Cl7ZW07KO87IS47JqULicsXG4gICAgICBpc1ZhbGlkKGlucHV0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgYnV5TG90dG9QcmljZSA9IE51bWJlcihpbnB1dFZhbHVlKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICFOdW1iZXIuaXNOYU4oYnV5TG90dG9QcmljZSkgJiYgTnVtYmVyLmlzSW50ZWdlcihidXlMb3R0b1ByaWNlKSAmJiBidXlMb3R0b1ByaWNlID49IDBcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgfSxcblxuICAgIG91dE9mUmFuZ2U6IHtcbiAgICAgIGVycm9yTWVzc2FnZTogYOuhnOuYkCDqtazsnoUg6riI7JWh7J2AICR7QlVZX0xPVFRPX1BSSUNFX1JBTkdFLm1pbi50b0xvY2FsZVN0cmluZygpfeybkCB+ICR7QlVZX0xPVFRPX1BSSUNFX1JBTkdFLm1heC50b0xvY2FsZVN0cmluZygpfeybkCDsgqzsnbTsl6zslbwg7ZWp64uI64ukLiDri6Tsi5wg7J6F66Cl7ZW07KO87IS47JqULmAsXG4gICAgICBpc1ZhbGlkKGlucHV0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgYW1vdW50ID0gTnVtYmVyKGlucHV0VmFsdWUpO1xuICAgICAgICByZXR1cm4gYW1vdW50ID49IEJVWV9MT1RUT19QUklDRV9SQU5HRS5taW4gJiYgYW1vdW50IDw9IEJVWV9MT1RUT19QUklDRV9SQU5HRS5tYXg7XG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBub3RJblRob3VzYW5kVW5pdDoge1xuICAgICAgZXJyb3JNZXNzYWdlOiBg66Gc65iQIOq1rOyehSDquIjslaHsnYAgJHtMT1RUT19QUklDRV9QRVJfVU5JVH3sm5Ag64uo7JyE7Jes7JW8IO2VqeuLiOuLpC4g64uk7IucIOyeheugpe2VtOyjvOyEuOyalC5gLFxuICAgICAgaXNWYWxpZChpbnB1dFZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGFtb3VudCA9IE51bWJlcihpbnB1dFZhbHVlKTtcbiAgICAgICAgcmV0dXJuIGFtb3VudCAlIExPVFRPX1BSSUNFX1BFUl9VTklUID09PSAwO1xuICAgICAgfSxcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiDsgqzsmqnsnpDsnZgg7J6F66ClIOq4iOyVoeyXkCDrjIDtlZwg7Jyg7Zqo7ISxIOqygOyCrCDsi6TtlolcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlucHV0VmFsdWUgLSDsgqzsmqnsnpDsnZgg7J6F66ClIOqwklxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGNoZWNrKGlucHV0VmFsdWUpIHtcbiAgICBzdGFydFZhbGlkYXRpb24odGhpcy52YWxpZGF0aW9uVHlwZXMsIGlucHV0VmFsdWUpO1xuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEJ1eUxvdHRvUHJpY2VWYWxpZGF0b3I7XG4iLCJleHBvcnQgY29uc3QgJCA9ICh0YXJnZXQsIHNlbGVjdG9yKSA9PiB0YXJnZXQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4iLCJpbXBvcnQgeyBDT01QT05FTlRfU0VMRUNUT1IgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvd2ViQXBwbGljYXRpb24nO1xuaW1wb3J0IHsgJCB9IGZyb20gJy4vZG9tJztcblxuY29uc3QgY3JlYXRlRXJyb3JNZXNzYWdlID0gKG1lc3NhZ2UpID0+IHtcbiAgY29uc3QgcGFyYWdyYXBoRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgY29uc3QgdGV4dEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShtZXNzYWdlKTtcblxuICBwYXJhZ3JhcGhFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Vycm9yLW1lc3NhZ2UnKTtcbiAgcGFyYWdyYXBoRWxlbWVudC5hcHBlbmRDaGlsZCh0ZXh0RWxlbWVudCk7XG5cbiAgcmV0dXJuIHBhcmFncmFwaEVsZW1lbnQ7XG59O1xuXG5jb25zdCBjb21taXROZXdFcnJvck1lc3NhZ2UgPSAobWVzc2FnZSwgdGFyZ2V0U2VsZWN0b3IpID0+IHtcbiAgY29uc3QgZXJyb3JNZXNzYWdlRWxlbWVudCA9IGNyZWF0ZUVycm9yTWVzc2FnZShtZXNzYWdlKTtcblxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldFNlbGVjdG9yKS5hcHBlbmRDaGlsZChlcnJvck1lc3NhZ2VFbGVtZW50KTtcbn07XG5cbmNvbnN0IHVwZGF0ZUVycm9yTWVzc2FnZSA9IChlcnJvck1lc3NhZ2VFbGVtZW50LCBtZXNzYWdlKSA9PiB7XG4gIGVycm9yTWVzc2FnZUVsZW1lbnQuaW5uZXJIVE1MID0gbWVzc2FnZTtcbn07XG5cbmV4cG9ydCBjb25zdCBzaG93RXJyb3JNZXNzYWdlID0gKG1lc3NhZ2UsIHRhcmdldEVsZW1lbnQpID0+IHtcbiAgY29uc3QgZXJyb3JNZXNzYWdlRWxlbWVudCA9ICQoJChkb2N1bWVudCwgdGFyZ2V0RWxlbWVudCksIENPTVBPTkVOVF9TRUxFQ1RPUi5lcnJvck1lc3NhZ2UpO1xuXG4gIGlmIChlcnJvck1lc3NhZ2VFbGVtZW50KSB7XG4gICAgdXBkYXRlRXJyb3JNZXNzYWdlKGVycm9yTWVzc2FnZUVsZW1lbnQsIG1lc3NhZ2UpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbW1pdE5ld0Vycm9yTWVzc2FnZShtZXNzYWdlLCB0YXJnZXRFbGVtZW50KTtcbn07XG5cbmV4cG9ydCBjb25zdCByZW1vdmVFcnJvck1lc3NhZ2UgPSAodGFyZ2V0RWxlbWVudCkgPT4ge1xuICBjb25zdCBlcnJvck1lc3NhZ2VFbGVtZW50ID0gJCh0YXJnZXRFbGVtZW50LCBDT01QT05FTlRfU0VMRUNUT1IuZXJyb3JNZXNzYWdlKTtcblxuICBpZiAoZXJyb3JNZXNzYWdlRWxlbWVudCkgZXJyb3JNZXNzYWdlRWxlbWVudC5yZW1vdmUoKTtcbn07XG4iLCJpbXBvcnQgQmFzZUNvbXBvbmVudCBmcm9tICcuLi9CYXNlQ29tcG9uZW50L0Jhc2VDb21wb25lbnQuanMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vUHVyY2hhc2VkTG90dG9Gb3JtLm1vZHVsZS5jc3MnO1xuXG5pbXBvcnQgQnV5TG90dG9QcmljZVZhbGlkYXRvciBmcm9tICcuLi8uLi8uLi92YWxpZGF0b3IvYnV5TG90dG9QcmljZS9CdXlMb3R0b1ByaWNlVmFsaWRhdG9yLmpzJztcblxuaW1wb3J0IEFwcEVycm9yIGZyb20gJy4uLy4uLy4uL2Vycm9ycy9BcHBFcnJvci9BcHBFcnJvci5qcyc7XG5cbmltcG9ydCB7IHJlbW92ZUVycm9yTWVzc2FnZSwgc2hvd0Vycm9yTWVzc2FnZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Vycm9yTWVzc2FnZS5qcyc7XG5pbXBvcnQgeyAkIH0gZnJvbSAnLi4vLi4vdXRpbHMvZG9tLmpzJztcblxuaW1wb3J0IHsgQ09NUE9ORU5UX1NFTEVDVE9SLCBDVVNUT01fRVZFTlRfVFlQRSB9IGZyb20gJy4uLy4uLy4uL2NvbnN0YW50cy93ZWJBcHBsaWNhdGlvbi5qcyc7XG5cbmNsYXNzIFB1cmNoYXNlZExvdHRvRm9ybSBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgdGhpcy5pbm5lckhUTUwgPSBgXG4gICAgICAgIDxmb3JtIGlkPVwicHVyY2hhc2VkLWxvdHRvLWZvcm1cIj5cbiAgICAgICAgICA8bGFiZWwgZm9yPVwicHVyY2hhc2VkLWxvdHRvLWlucHV0XCIgY2xhc3M9XCJib2R5XCI+6rWs7J6F7ZWgIOq4iOyVoeydhCDsnoXroKXtlbTso7zshLjsmpQuPC9sYWJlbD5cbiAgICAgICAgICA8ZGl2IGlkPVwiaW5wdXQtY29udGFpbmVyXCIgY2xhc3M9JHtzdHlsZXMuaW5wdXRDb250YWluZXJ9PlxuICAgICAgICAgICAgPGlucHV0IGlkPVwicHVyY2hhc2VkLWxvdHRvLWlucHV0XCIgdHlwZT1cIm51bWJlclwiIGNsYXNzPVwiJHtzdHlsZXMucHVyY2hhc2VkTG90dG9QcmljZUlucHV0fSBwbGFjZWhvbGRlclwiIHBsYWNlaG9sZGVyPVwi6riI7JWhXCIvPlxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY2xhc3M9XCIke3N0eWxlcy5wdXJjaGFzZWRCdXR0b259IGNhcHRpb25cIj7qtazsnoU8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9mb3JtPlxuICAgIGA7XG4gIH1cblxuICByZW1vdmVFdmVudCgpIHtcbiAgICB0aGlzLm9mZihcbiAgICAgIHsgdGFyZ2V0OiAkKHRoaXMsIENPTVBPTkVOVF9TRUxFQ1RPUi5wdXJjaGFzZWRMb3R0b0Zvcm0pLCBldmVudE5hbWU6ICdzdWJtaXQnIH0sXG4gICAgICB0aGlzLiNoYW5kbGVTdWJtaXRCdXlMb3R0b1ByaWNlLmJpbmQodGhpcyksXG4gICAgKTtcbiAgfVxuXG4gIHNldEV2ZW50KCkge1xuICAgIHRoaXMub24oXG4gICAgICB7IHRhcmdldDogJCh0aGlzLCBDT01QT05FTlRfU0VMRUNUT1IucHVyY2hhc2VkTG90dG9Gb3JtKSwgZXZlbnROYW1lOiAnc3VibWl0JyB9LFxuICAgICAgdGhpcy4jaGFuZGxlU3VibWl0QnV5TG90dG9QcmljZS5iaW5kKHRoaXMpLFxuICAgICk7XG4gIH1cblxuICAjaGFuZGxlU3VibWl0QnV5TG90dG9QcmljZShldmVudCkge1xuICAgIHRyeSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBjb25zdCBwdXJjaGFzZWRMb3R0b1ByaWNlID0gdGhpcy4jZ2V0UHVyY2hhc2VkTG90dG9QcmljZSgpO1xuICAgICAgQnV5TG90dG9QcmljZVZhbGlkYXRvci5jaGVjayhwdXJjaGFzZWRMb3R0b1ByaWNlKTtcblxuICAgICAgcmVtb3ZlRXJyb3JNZXNzYWdlKHRoaXMpO1xuXG4gICAgICAkKHRoaXMsIENPTVBPTkVOVF9TRUxFQ1RPUi5wdXJjaGFzZWRMb3R0b0lucHV0KS52YWx1ZSA9ICcnO1xuXG4gICAgICB0aGlzLmVtaXQoQ1VTVE9NX0VWRU5UX1RZUEUuYnV5TG90dG9QcmljZSwgTnVtYmVyKHB1cmNoYXNlZExvdHRvUHJpY2UpKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQXBwRXJyb3IpIHtcbiAgICAgICAgY29uc3Qgbm9uUHJlZml4RXJyb3JNZXNzYWdlID0gZXJyb3IubWVzc2FnZS5yZXBsYWNlKEFwcEVycm9yLlBSRUZJWCwgJycpO1xuICAgICAgICBzaG93RXJyb3JNZXNzYWdlKG5vblByZWZpeEVycm9yTWVzc2FnZSwgQ09NUE9ORU5UX1NFTEVDVE9SLnB1cmNoYXNlZExvdHRvRm9ybSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgI2dldFB1cmNoYXNlZExvdHRvUHJpY2UoKSB7XG4gICAgY29uc3QgcHVyY2hhc2VkTG90dG9JbnB1dEVsZW1lbnQgPSAkKHRoaXMsIENPTVBPTkVOVF9TRUxFQ1RPUi5wdXJjaGFzZWRMb3R0b0lucHV0KTtcblxuICAgIHJldHVybiBwdXJjaGFzZWRMb3R0b0lucHV0RWxlbWVudD8udmFsdWU7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdwdXJjaGFzZWQtbG90dG8tZm9ybScsIFB1cmNoYXNlZExvdHRvRm9ybSk7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUHVyY2hhc2VkTG90dG8ubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUHVyY2hhc2VkTG90dG8ubW9kdWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBCYXNlQ29tcG9uZW50IGZyb20gJy4uL0Jhc2VDb21wb25lbnQvQmFzZUNvbXBvbmVudC5qcyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vUHVyY2hhc2VkTG90dG8ubW9kdWxlLmNzcyc7XG5cbmNsYXNzIFB1cmNoYXNlZExvdHRvIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gICNsb3R0b051bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihsb3R0b051bWJlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jbG90dG9OdW1iZXIgPSBsb3R0b051bWJlcjtcbiAgfVxuXG4gIGdldFRlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8bGkgY2xhc3M9XCIke3N0eWxlcy5wdXJjaGFzZWRMb3R0b30gYm9keVwiPlxuICAgICAgICA8c3BhbiBjbGFzcz0ke3N0eWxlcy50aWNrZXRJY29ufT7wn46f77iPPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0ke3N0eWxlcy5sb3R0b051bWJlcn0+JHt0aGlzLiNsb3R0b051bWJlci5qb2luKCcsICcpfTwv44S0PlxuICAgICAgPC9saT5cbiAgICBgO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgncHVyY2hhc2VkLWxvdHRvJywgUHVyY2hhc2VkTG90dG8pO1xuXG5leHBvcnQgZGVmYXVsdCBQdXJjaGFzZWRMb3R0bztcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9QdXJjaGFzZWRMb3R0b1NlY3Rpb24ubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUHVyY2hhc2VkTG90dG9TZWN0aW9uLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgTG90dG9CdXllciBmcm9tICcuLi9kb21haW4vTG90dG9CdXllci9Mb3R0b0J1eWVyJztcblxuY29uc3QgQnV5TG90dG9TZXJ2aWNlID0gT2JqZWN0LmZyZWV6ZSh7XG4gIGNyZWF0ZUxvdHRvTnVtYmVycyhidXlMb3R0b1ByaWNlKSB7XG4gICAgY29uc3QgbG90dG9CdXllciA9IG5ldyBMb3R0b0J1eWVyKGJ1eUxvdHRvUHJpY2UpO1xuICAgIGNvbnN0IGxvdHRvTnVtYmVycyA9IGxvdHRvQnV5ZXIucHVyY2hhc2UoKTtcblxuICAgIHJldHVybiBsb3R0b051bWJlcnM7XG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQnV5TG90dG9TZXJ2aWNlO1xuIiwiaW1wb3J0IEJhc2VDb21wb25lbnQgZnJvbSAnLi4vQmFzZUNvbXBvbmVudC9CYXNlQ29tcG9uZW50LmpzJztcbmltcG9ydCBQdXJjaGFzZWRMb3R0byBmcm9tICcuLi9QdXJjaGFzZWRMb3R0by9QdXJjaGFzZWRMb3R0by5qcyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9QdXJjaGFzZWRMb3R0b1NlY3Rpb24ubW9kdWxlLmNzcyc7XG5cbmltcG9ydCBCdXlMb3R0b1NlcnZpY2UgZnJvbSAnLi4vLi4vLi4vc2VydmljZS9CdXlMb3R0b1NlcnZpY2UuanMnO1xuXG5pbXBvcnQgeyBDVVNUT01fRVZFTlRfVFlQRSB9IGZyb20gJy4uLy4uLy4uL2NvbnN0YW50cy93ZWJBcHBsaWNhdGlvbi5qcyc7XG5cbmNsYXNzIFB1cmNoYXNlZExvdHRvU2VjdGlvbiBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuICAjYnV5TG90dG9QcmljZSA9IDA7XG5cbiAgI2xvdHRvTnVtYmVycyA9IFtdO1xuXG4gICNsb3R0b3NUZW1wbGF0ZSA9ICcnO1xuXG4gIHJlbmRlcigpIHtcbiAgICB0aGlzLmlubmVySFRNTCA9IGBcbiAgICAgICAgPHNlY3Rpb24+XG4gICAgICAgICAgPHAgY2xhc3M9XCIke3N0eWxlcy5wdXJjaGFzZWRNZXNzYWdlfSBib2R5XCI+7LSdICR7XG4gICAgICB0aGlzLiNsb3R0b051bWJlcnM/Lmxlbmd0aFxuICAgIH3qsJzrpbwg6rWs66ek7ZWY7JiA7Iq164uI64ukLjwvcD5cbiAgICAgICAgICA8dWwgY2xhc3M9XCIke3N0eWxlcy5wdXJjaGFzZWRMb3R0b3N9XCI+XG4gICAgICAgICAgICAke3RoaXMuI2xvdHRvc1RlbXBsYXRlfVxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvc2VjdGlvbj5cbiAgICBgO1xuICB9XG5cbiAgcmVtb3ZlRXZlbnQoKSB7XG4gICAgdGhpcy5vZmYoXG4gICAgICB7IHRhcmdldDogZG9jdW1lbnQsIGV2ZW50TmFtZTogQ1VTVE9NX0VWRU5UX1RZUEUuYnV5TG90dG9QcmljZSB9LFxuICAgICAgdGhpcy4jaGFuZGxlUmVuZGVyUHVyY2hhc2VkTG90dG9TZWN0aW9uLmJpbmQodGhpcyksXG4gICAgKTtcbiAgfVxuXG4gIHNldEV2ZW50KCkge1xuICAgIHRoaXMub24oXG4gICAgICB7IHRhcmdldDogZG9jdW1lbnQsIGV2ZW50TmFtZTogQ1VTVE9NX0VWRU5UX1RZUEUuYnV5TG90dG9QcmljZSB9LFxuICAgICAgdGhpcy4jaGFuZGxlUmVuZGVyUHVyY2hhc2VkTG90dG9TZWN0aW9uLmJpbmQodGhpcyksXG4gICAgKTtcbiAgfVxuXG4gICNoYW5kbGVSZW5kZXJQdXJjaGFzZWRMb3R0b1NlY3Rpb24oZXZlbnQpIHtcbiAgICB0aGlzLiN1cGRhdGVCdXlMb3R0b0RldGFpbChldmVudCk7XG5cbiAgICB0aGlzLiNsb3R0b3NUZW1wbGF0ZSA9IHRoaXMuI2NyZWF0ZUxvdHRvc1RlbXBsYXRlKCk7XG5cbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NlJyk7XG5cbiAgICB0aGlzLmNvbm5lY3RlZENhbGxiYWNrKCk7XG4gIH1cblxuICAjdXBkYXRlQnV5TG90dG9EZXRhaWwoZXZlbnQpIHtcbiAgICB0aGlzLiNidXlMb3R0b1ByaWNlID0gZXZlbnQ/LmRldGFpbDtcblxuICAgIGNvbnN0IGxvdHRvTnVtYmVycyA9IEJ1eUxvdHRvU2VydmljZS5jcmVhdGVMb3R0b051bWJlcnModGhpcy4jYnV5TG90dG9QcmljZSk7XG4gICAgdGhpcy4jbG90dG9OdW1iZXJzID0gbG90dG9OdW1iZXJzO1xuICB9XG5cbiAgI2NyZWF0ZUxvdHRvc1RlbXBsYXRlKCkge1xuICAgIHJldHVybiB0aGlzLiNsb3R0b051bWJlcnMucmVkdWNlKHRoaXMuI2NyZWF0ZUxvdHRvVGVtcGxhdGUsICcnKTtcbiAgfVxuXG4gICNjcmVhdGVMb3R0b1RlbXBsYXRlKHByZXZMb3R0b3NUZW1wbGF0ZSwgbG90dG9OdW1iZXIpIHtcbiAgICBjb25zdCBsb3R0b0VsZW1lbnQgPSBuZXcgUHVyY2hhc2VkTG90dG8obG90dG9OdW1iZXIpO1xuICAgIGNvbnN0IGFkZGVkTG90dG9UZW1wbGF0ZSA9IGAke3ByZXZMb3R0b3NUZW1wbGF0ZX1cXG4ke2xvdHRvRWxlbWVudC5nZXRUZW1wbGF0ZSgpfWA7XG5cbiAgICByZXR1cm4gYWRkZWRMb3R0b1RlbXBsYXRlO1xuICB9XG5cbiAgZ2V0QnV5TG90dG9EZXRhaWxzKCkge1xuICAgIHJldHVybiB7IGxvdHRvTnVtYmVyczogdGhpcy4jbG90dG9OdW1iZXJzLCBidXlMb3R0b1ByaWNlOiB0aGlzLiNidXlMb3R0b1ByaWNlIH07XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdwdXJjaGFzZWQtbG90dG8tc2VjdGlvbicsIFB1cmNoYXNlZExvdHRvU2VjdGlvbik7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vV2lubmluZ0RldGFpbEZvcm0ubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vV2lubmluZ0RldGFpbEZvcm0ubW9kdWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIi8qKlxuICogQG1vZHVsZSBSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yXG4gKiDsiJjsnbXrpaAg6rOE7IKw7J2YIOyXre2VoOydhCDsiJjtlontlZjripQg64+E66mU7J24IOqwneyytFxuICovXG5jbGFzcyBSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yIHtcbiAgc3RhdGljIFdJTk5JTkdfUFJJWkVfREVUQUlMID0ge1xuICAgICcxc3QnOiAyXzAwMF8wMDBfMDAwLFxuICAgICcybmQnOiAzMF8wMDBfMDAwLFxuICAgICczcmQnOiAxXzUwMF8wMDAsXG4gICAgJzR0aCc6IDUwXzAwMCxcbiAgICAnNXRoJzogNV8wMDAsXG4gIH07XG5cbiAgI2J1eUxvdHRvUHJpY2U7XG5cbiAgI3dpbm5pbmdSYW5rUmVzdWx0O1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3tidXlMb3R0b1ByaWNlIDogbnVtYmVyLCB3aW5uaW5nUmFua1Jlc3VsdCA6IGltcG9ydChcIi4uLy4uL3R5cGVzL2pzRG9jXCIpLldpbm5pbmdSYW5rUmVzdWx0fX0gcGFyYW0gLSDroZzrmJAg6rWs7J6FIOq4iOyVoeqzvCwg6rCBIOuTseyImOydmCDri7nssqgg7Zqf7IiYICDri7TquLQg6rCd7LK0XG4gICAqL1xuICBjb25zdHJ1Y3Rvcih7IGJ1eUxvdHRvUHJpY2UsIHdpbm5pbmdSYW5rUmVzdWx0IH0pIHtcbiAgICB0aGlzLiNidXlMb3R0b1ByaWNlID0gYnV5TG90dG9QcmljZTtcbiAgICB0aGlzLiN3aW5uaW5nUmFua1Jlc3VsdCA9IHdpbm5pbmdSYW5rUmVzdWx0O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IC0g7IiY7J2166WgXG4gICAqL1xuICBleGVjdXRlKCkge1xuICAgIGNvbnN0IHRvdGFsUHJpemUgPSB0aGlzLiNjYWxjdWxhdGVUb3RhbFByaXplKCk7XG5cbiAgICByZXR1cm4gdGhpcy4jZm9ybWF0VG90YWxQcml6ZVRvUmF0ZU9mUmV0dXJuKHRvdGFsUHJpemUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IC0g7LSdIOuLueyyqCDquIjslaFcbiAgICovXG4gICNjYWxjdWxhdGVUb3RhbFByaXplKCkge1xuICAgIGNvbnN0IHRvdGFsUHJpemUgPSBPYmplY3Qua2V5cyh0aGlzLiN3aW5uaW5nUmFua1Jlc3VsdCkucmVkdWNlKCh0b3RhbCwgcmFuaykgPT4ge1xuICAgICAgY29uc3QgY291bnQgPSB0aGlzLiN3aW5uaW5nUmFua1Jlc3VsdFtyYW5rXTtcbiAgICAgIGNvbnN0IHByaXplID0gUmF0ZU9mUmV0dXJuQ2FsY3VsYXRvci5XSU5OSU5HX1BSSVpFX0RFVEFJTFtyYW5rXTtcblxuICAgICAgcmV0dXJuIHRvdGFsICsgY291bnQgKiBwcml6ZTtcbiAgICB9LCAwKTtcblxuICAgIHJldHVybiB0b3RhbFByaXplO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB0b3RhbFByaXplIC0g7LSdIOuLueyyqCDquIjslaFcbiAgICogQHJldHVybnMge3N0cmluZ30g7IaM7Iir7KCQIOuRmOynuCDsnpDrpqzsl5DshJwg67CY7Jis66a8IOuQnCDsiJjsnbXrpaBcbiAgICovXG4gICNmb3JtYXRUb3RhbFByaXplVG9SYXRlT2ZSZXR1cm4odG90YWxQcml6ZSkge1xuICAgIHJldHVybiAoKHRvdGFsUHJpemUgLyB0aGlzLiNidXlMb3R0b1ByaWNlKSAqIDEwMCkudG9GaXhlZCgxKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yO1xuIiwiLyoqXG4gKiBAbW9kdWxlIFdpbm5pbmdSYW5rXG4gKiDroZzrmJAg67KI7Zi47JmAIOuLueyyqCDrsojtmLgg67CPIOuztOuEiOyKpCDrsojtmLjrpbwg67mE6rWQ7ZWY7JesIOuLueyyqCDrk7HsiJjrpbwg6rOE7IKw7ZWY64qUIOyXre2VoOydmCDrqqjrk4hcbiAqL1xuY2xhc3MgV2lubmluZ1Jhbmsge1xuICAvKipcbiAgICogQHR5cGUge2ltcG9ydChcIi4uLy4uL3R5cGVzL2pzRG9jXCIpLlJhbmtSdWxlfVxuICAgKi9cbiAgc3RhdGljIFJBTktfUlVMRSA9IHtcbiAgICAnMXN0JzogeyBtYXRjaDogNiwgaGFzQm9udXM6IGZhbHNlLCBkZXNjcmlwdGlvbjogJzbqsJwg7J287LmYJyB9LFxuICAgICcybmQnOiB7IG1hdGNoOiA1LCBoYXNCb251czogdHJ1ZSwgZGVzY3JpcHRpb246ICc16rCcIOydvOy5mCwg67O064SI7IqkIOuzvCDsnbzsuZgnIH0sXG4gICAgJzNyZCc6IHsgbWF0Y2g6IDUsIGhhc0JvbnVzOiBmYWxzZSwgZGVzY3JpcHRpb246ICc16rCcIOydvOy5mCcgfSxcbiAgICAnNHRoJzogeyBtYXRjaDogNCwgaGFzQm9udXM6IGZhbHNlLCBkZXNjcmlwdGlvbjogJzTqsJwg7J287LmYJyB9LFxuICAgICc1dGgnOiB7IG1hdGNoOiAzLCBoYXNCb251czogZmFsc2UsIGRlc2NyaXB0aW9uOiAnM+qwnCDsnbzsuZgnIH0sXG4gIH07XG5cbiAgI2xvdHRvRHJhd0RldGFpbDtcblxuICAvKipcbiAgICogQHR5cGUge2ltcG9ydChcIi4uLy4uL3R5cGVzL2pzRG9jXCIpLldpbm5pbmdSYW5rUmVzdWx0fVxuICAgKi9cbiAgI3dpbm5pbmdSYW5rUmVzdWx0ID0ge1xuICAgICcxc3QnOiAwLFxuICAgICcybmQnOiAwLFxuICAgICczcmQnOiAwLFxuICAgICc0dGgnOiAwLFxuICAgICc1dGgnOiAwLFxuICB9O1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2ltcG9ydChcIi4uLy4uL3R5cGVzL2pzRG9jXCIpLkxvdHRvRHJhd0RldGFpbH0gbG90dG9EcmF3RGV0YWlsIC0g64u57LKoIOuyiO2YuCwg67O064SI7IqkIOuyiO2YuCwg66Gc65iQIOuyiO2YuOydmCDsho3shLHsnLzroZwg7J2066Oo7Ja07KeEIOqwneyytFxuICAgKi9cbiAgY29uc3RydWN0b3IoeyB3aW5uaW5nTnVtYmVyLCBsb3R0b051bWJlcnMsIGJvbnVzTnVtYmVyIH0pIHtcbiAgICB0aGlzLiNsb3R0b0RyYXdEZXRhaWwgPSB7IHdpbm5pbmdOdW1iZXIsIGxvdHRvTnVtYmVycywgYm9udXNOdW1iZXIgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7aW1wb3J0KFwiLi4vLi4vdHlwZXMvanNEb2NcIikuV2lubmluZ1JhbmtSZXN1bHR9IC0gMSB+IDXrk7HsnZgg64u57LKoIO2an+yImOqwgCDri7TquLQg6rCd7LK0XG4gICAqL1xuICBjYWxjdWxhdGVSYW5rKCkge1xuICAgIHJldHVybiB0aGlzLiNsb3R0b0RyYXdEZXRhaWwubG90dG9OdW1iZXJzLnJlZHVjZSgocHJldldpbm5pbmdSYW5rRGV0YWlsLCBsb3R0b051bWJlcikgPT4ge1xuICAgICAgY29uc3QgcmFuayA9IHRoaXMuI2RldGVybWluZVJhbmsobG90dG9OdW1iZXIpO1xuXG4gICAgICByZXR1cm4gcmFuayAhPT0gbnVsbFxuICAgICAgICA/IHsgLi4ucHJldldpbm5pbmdSYW5rRGV0YWlsLCBbcmFua106IHByZXZXaW5uaW5nUmFua0RldGFpbFtyYW5rXSArIDEgfVxuICAgICAgICA6IHByZXZXaW5uaW5nUmFua0RldGFpbDtcbiAgICB9LCB0aGlzLiN3aW5uaW5nUmFua1Jlc3VsdCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtpbXBvcnQoXCIuLi8uLi90eXBlcy9qc0RvY1wiKS5Mb3R0b051bWJlcn0gbG90dG9OdW1iZXIgLSDroZzrmJAg67KI7Zi4XG4gICAqIEByZXR1cm5zIHtpbXBvcnQoXCIuLi8uLi90eXBlcy9qc0RvY1wiKS5SYW5rIHwgbnVsbH0g65Ox7IiYIOygleuztCDrmJDripQgbnVsbFxuICAgKi9cbiAgI2RldGVybWluZVJhbmsobG90dG9OdW1iZXIpIHtcbiAgICBjb25zdCBtYXRjaENvdW50ID0gdGhpcy4jY291bnRNYXRjaGluZ051bWJlcnMobG90dG9OdW1iZXIpO1xuICAgIGNvbnN0IHRhcmdldFJhbmtSdWxlID0gT2JqZWN0LmVudHJpZXMoV2lubmluZ1JhbmsuUkFOS19SVUxFKS5maW5kKFxuICAgICAgKFssIHsgbWF0Y2gsIGhhc0JvbnVzIH1dKSA9PlxuICAgICAgICBtYXRjaENvdW50ID09PSBtYXRjaCAmJiB0aGlzLiNpc0luY2x1ZGluZ0JvbnVzTnVtYmVyKGxvdHRvTnVtYmVyKSA9PT0gaGFzQm9udXMsXG4gICAgKTtcblxuICAgIGNvbnN0IHJhbmsgPSB0YXJnZXRSYW5rUnVsZSA/IHRhcmdldFJhbmtSdWxlWzBdIDogbnVsbDtcbiAgICByZXR1cm4gcmFuaztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2ltcG9ydChcIi4uLy4uL3R5cGVzL2pzRG9jXCIpLkxvdHRvTnVtYmVyfSBsb3R0b051bWJlciAtIOuhnOuYkCDrsojtmLhcbiAgICogQHJldHVybnMge251bWJlcn0g66Gc65iQIOuyiO2YuOyXkCDri7nssqgg67KI7Zi4IOydvOy5mCDqsK/siJhcbiAgICovXG4gICNjb3VudE1hdGNoaW5nTnVtYmVycyhsb3R0b051bWJlcikge1xuICAgIGNvbnN0IHdpbm5pbmdOdW1iZXJTZXQgPSBuZXcgU2V0KHRoaXMuI2xvdHRvRHJhd0RldGFpbC53aW5uaW5nTnVtYmVyKTtcblxuICAgIHJldHVybiBsb3R0b051bWJlci5yZWR1Y2UoXG4gICAgICAoY291bnQsIG51bWJlcikgPT4gKHdpbm5pbmdOdW1iZXJTZXQuaGFzKG51bWJlcikgPyBjb3VudCArIDEgOiBjb3VudCksXG4gICAgICAwLFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtpbXBvcnQoXCIuLi8uLi90eXBlcy9qc0RvY1wiKS5Mb3R0b051bWJlcn0gbG90dG9OdW1iZXIgLSDroZzrmJAg67KI7Zi4XG4gICAqIEByZXR1cm5zIHtib29sZWFufSDroZzrmJAg67KI7Zi47JeQIOuztOuEiOyKpCDrsojtmLgg7Y+s7ZWoIOyXrOu2gFxuICAgKi9cbiAgI2lzSW5jbHVkaW5nQm9udXNOdW1iZXIobG90dG9OdW1iZXIpIHtcbiAgICByZXR1cm4gbG90dG9OdW1iZXIuaW5jbHVkZXModGhpcy4jbG90dG9EcmF3RGV0YWlsLmJvbnVzTnVtYmVyKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBXaW5uaW5nUmFuaztcbiIsImltcG9ydCB7IFJhdGVPZlJldHVybkNhbGN1bGF0b3IsIFdpbm5pbmdSYW5rIH0gZnJvbSAnLi4vZG9tYWluL2luZGV4LmpzJztcblxuY29uc3QgV2lubmluZ1Jlc3VsdFNlcnZpY2UgPSBPYmplY3QuZnJlZXplKHtcbiAgY3JlYXRlV2lubmluZ1Jlc3VsdCh7IHdpbm5pbmdOdW1iZXIsIGJvbnVzTnVtYmVyLCBsb3R0b051bWJlcnMsIGJ1eUxvdHRvUHJpY2UgfSkge1xuICAgIGNvbnN0IHdpbm5pbmdSYW5rID0gbmV3IFdpbm5pbmdSYW5rKHsgd2lubmluZ051bWJlciwgYm9udXNOdW1iZXIsIGxvdHRvTnVtYmVycyB9KTtcbiAgICBjb25zdCB3aW5uaW5nUmFua1Jlc3VsdCA9IHdpbm5pbmdSYW5rLmNhbGN1bGF0ZVJhbmsoKTtcblxuICAgIGNvbnN0IHJhdGVPZlJldHVybkNhbGN1bGF0b3IgPSBuZXcgUmF0ZU9mUmV0dXJuQ2FsY3VsYXRvcih7IGJ1eUxvdHRvUHJpY2UsIHdpbm5pbmdSYW5rUmVzdWx0IH0pO1xuICAgIGNvbnN0IHJhdGVPZlJldHVybiA9IHJhdGVPZlJldHVybkNhbGN1bGF0b3IuZXhlY3V0ZSgpO1xuXG4gICAgcmV0dXJuIHsgcmF0ZU9mUmV0dXJuLCB3aW5uaW5nUmFua1Jlc3VsdCB9O1xuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFdpbm5pbmdSZXN1bHRTZXJ2aWNlO1xuIiwiLyoqXG4gKiDtmITsnqwgc2luZ2xlIGV4cG9ydOuhnCDsnbjtlbQgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCDqtIDroKggYWlyYm5iIOy7qOuypOyFmOydhCDsnITrsLDtlZjqs6Ag7J6I7KeA66eMXG4gKiBjb25zdGFudHMg66qo65OI7J20IGRlZmF1bHQgZXhwb3J0IOyFqeqyqeyXkCDrp57sp4Ag7JWK64uk64qUIOygkOqzvCByYW5kb23qs7wg6rSA66Co65CcIOyDgeyImOqwgCDstpTqsIDrkKAg7IiYIOyeiOuLpOqzoCDtjJDri6jrkJjslrRcbiAqIGV4cG9ydCDrsKnsi53snYQg7Jyg7KeA7ZWY6riw66GcIOqysOyglVxuICovXG5leHBvcnQgY29uc3QgU1lNQk9MUyA9IE9iamVjdC5mcmVlemUoe1xuICBlbXB0eVN0cmluZzogJycsXG4gIHNwYWNlOiAnICcsXG4gIGNvbW1hOiAnLCcsXG59KTtcbiIsImltcG9ydCB7IHN0YXJ0VmFsaWRhdGlvbiB9IGZyb20gJy4uL3N0YXJ0VmFsaWRhdGlvbi5qcyc7XG5cbmltcG9ydCB7IFNZTUJPTFMgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvc3ltYm9scy5qcyc7XG5cbmltcG9ydCB7IGRlZXBGcmVlemUgfSBmcm9tICcuLi8uLi91dGlscy9vYmplY3Qvb2JqZWN0LmpzJztcblxuLyoqXG4gKiBAbW9kdWxlIENvbW1vblZhbGlkYXRvclxuICogQHR5cGUge2ltcG9ydCgnLi4vLi4vdHlwZXMvanNEb2MuanMnKS5Db21tb25WYWxpZGF0b3J9XG4gKiDsnoXroKUg6rCS7JeQIOuMgO2VnCDsnbzrsJjsoIHsnbgg7Jyg7Zqo7ISxIOqygOyCrOulvCDsiJjtlontlZjripQg66qo65OIXG4gKi9cbmNvbnN0IENvbW1vblZhbGlkYXRvciA9IGRlZXBGcmVlemUoe1xuICAvKipcbiAgICogQHR5cGUge2ltcG9ydCgnLi4vLi4vdHlwZXMvanNEb2MuanMnKS5Db21tb25WYWxpZGF0aW9uVHlwZXN9XG4gICAqL1xuICB2YWxpZGF0aW9uVHlwZXM6IHtcbiAgICBlbXB0eVZhbHVlczoge1xuICAgICAgZXJyb3JNZXNzYWdlOiAn7J6F66Cl6rCS7J20IOyhtOyerO2VmOyngCDslYrsirXri4jri6QuIOuLpOyLnCDsnoXroKXtlbQg7KO87IS47JqULicsXG4gICAgICBpc1ZhbGlkKGlucHV0VmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0VmFsdWUgIT09IFNZTUJPTFMuZW1wdHlTdHJpbmc7XG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dFZhbHVlIC0g7IKs7Jqp7J6Q7J2YIOyeheugpSDqsJJcbiAgICogQHRocm93cyB7aW1wb3J0KCcuLi8uLi9lcnJvcnMvQXBwRXJyb3IvQXBwRXJyb3IuanMnKS5kZWZhdWx0fSDsnKDtmqjshLHsnYQg66eM7KGx7ZWY7KeAIOyViuydhCDqsr3smrAg7JeQ65+sIOuwnOyDnVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGNoZWNrKGlucHV0VmFsdWUpIHtcbiAgICBzdGFydFZhbGlkYXRpb24odGhpcy52YWxpZGF0aW9uVHlwZXMsIGlucHV0VmFsdWUpO1xuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENvbW1vblZhbGlkYXRvcjtcbiIsIi8qKlxuICog7ZiE7J6sIHNpbmdsZSBleHBvcnTroZwg7J247ZW0IGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQg6rSA66CoIGFpcmJuYiDsu6jrsqTshZjsnYQg7JyE67Cw7ZWY6rOgIOyeiOyngOunjFxuICogY29uc3RhbnRzIOuqqOuTiOydtCBkZWZhdWx0IGV4cG9ydCDshanqsqnsl5Ag66ee7KeAIOyViuuLpOuKlCDsoJDqs7wg7LaU6rCA7KCB7J24IOygleq3nCDtkZztmITsi53snbQg7LaU6rCA65CgIOqyg+ycvOuhnCDsmIjsg4HrkJjslrRcbiAqIGV4cG9ydCDrsKnsi53snYQg7Jyg7KeA7ZWY6riw66GcIOqysOyglVxuICovXG5leHBvcnQgY29uc3QgSU5QVVRfTE9UVE9fTlVNQkVSX1JFR0VYUCA9IC9eKFswLTldXFxkPykoLFswLTldXFxkPykqJC87XG4iLCJpbXBvcnQgTG90dG8gZnJvbSAnLi4vLi4vZG9tYWluL0xvdHRvL0xvdHRvLmpzJztcblxuaW1wb3J0IHsgc3RhcnRWYWxpZGF0aW9uIH0gZnJvbSAnLi4vc3RhcnRWYWxpZGF0aW9uLmpzJztcblxuaW1wb3J0IHsgU1lNQk9MUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9zeW1ib2xzLmpzJztcbmltcG9ydCB7IElOUFVUX0xPVFRPX05VTUJFUl9SRUdFWFAgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvcmVnZXhwLmpzJztcblxuaW1wb3J0IHsgZGVlcEZyZWV6ZSB9IGZyb20gJy4uLy4uL3V0aWxzL29iamVjdC9vYmplY3QuanMnO1xuXG5jb25zdCB7IExPVFRPX1JVTEUgfSA9IExvdHRvO1xuXG4vKipcbiAqIEBtb2R1bGUgV2lubmluZ051bWJlclZhbGlkYXRvclxuICogQHR5cGUge2ltcG9ydCgnLi4vLi4vdHlwZXMvanNEb2MuanMnKS5XaW5uaW5nTnVtYmVyVmFsaWRhdG9yfVxuICog64u57LKoIOuyiO2YuCDsnoXroKXsl5Ag64yA7ZWcIOycoO2aqOyEsSDqsoDsgqzrpbwg7IiY7ZaJ7ZWY64qUIOuqqOuTiFxuICovXG5jb25zdCBXaW5uaW5nTnVtYmVyVmFsaWRhdG9yID0gZGVlcEZyZWV6ZSh7XG4gIC8qKlxuICAgKiBAdHlwZSB7aW1wb3J0KCcuLi8uLi90eXBlcy9qc0RvYy5qcycpLldpbm5pbmdOdW1iZXJWYWxpZGF0aW9uVHlwZXN9XG4gICAqL1xuICB2YWxpZGF0aW9uVHlwZXM6IHtcbiAgICBpc1ZhbGlkVHlwZToge1xuICAgICAgZXJyb3JNZXNzYWdlOiAn64u57LKoIOuyiO2YuCDsnoXroKXsnZgg7ZiV7Iud7J20IOyYrOuwlOultOyngCDslYrsirXri4jri6QuIOuLpOyLnCDsnoXroKXtlbTso7zshLjsmpQuJyxcbiAgICAgIGlzVmFsaWQoaW5wdXRWYWx1ZSkge1xuICAgICAgICByZXR1cm4gSU5QVVRfTE9UVE9fTlVNQkVSX1JFR0VYUC50ZXN0KGlucHV0VmFsdWUpO1xuICAgICAgfSxcbiAgICB9LFxuXG4gICAgaXNWYWxpZExlbmd0aDoge1xuICAgICAgZXJyb3JNZXNzYWdlOiBg64u57LKoIOuyiO2YuOuKlCAke0xPVFRPX1JVTEUuY291bnR96rCc7Jes7JW8IO2VqeuLiOuLpC4g64uk7IucIOyeheugpe2VtOyjvOyEuOyalC5gLFxuICAgICAgaXNWYWxpZChpbnB1dFZhbHVlKSB7XG4gICAgICAgIGNvbnN0IG51bWJlcnMgPSBpbnB1dFZhbHVlLnNwbGl0KFNZTUJPTFMuY29tbWEpLm1hcChOdW1iZXIpO1xuICAgICAgICByZXR1cm4gbnVtYmVycy5sZW5ndGggPT09IExPVFRPX1JVTEUuY291bnQ7XG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBpc1ZhbGlkUmFuZ2U6IHtcbiAgICAgIGVycm9yTWVzc2FnZTogYOuLueyyqCDrsojtmLjripQgJHtMT1RUT19SVUxFLm1pbn0gfiAke0xPVFRPX1JVTEUubWF4fSDsgqzsnbTsnZgg7J6Q7Jew7IiY7Jes7JW8IO2VqeuLiOuLpC4g64uk7IucIOyeheugpe2VtOyjvOyEuOyalC5gLFxuICAgICAgaXNWYWxpZChpbnB1dFZhbHVlKSB7XG4gICAgICAgIGNvbnN0IG51bWJlcnMgPSBpbnB1dFZhbHVlLnNwbGl0KFNZTUJPTFMuY29tbWEpLm1hcChOdW1iZXIpO1xuICAgICAgICByZXR1cm4gbnVtYmVycy5ldmVyeSgobnVtYmVyKSA9PiBudW1iZXIgPj0gTE9UVE9fUlVMRS5taW4gJiYgbnVtYmVyIDw9IExPVFRPX1JVTEUubWF4KTtcbiAgICAgIH0sXG4gICAgfSxcblxuICAgIGlzVW5pcXVlOiB7XG4gICAgICBlcnJvck1lc3NhZ2U6ICfri7nssqgg67KI7Zi464qUIOyEnOuhnCDspJHrs7XrkJjsp4Ag7JWK7JWE7JW8IO2VqeuLiOuLpC4g64uk7IucIOyeheugpe2VtOyjvOyEuOyalC4nLFxuICAgICAgaXNWYWxpZChpbnB1dFZhbHVlKSB7XG4gICAgICAgIGNvbnN0IHdpbm5pbmdOdW1iZXIgPSBpbnB1dFZhbHVlLnNwbGl0KFNZTUJPTFMuY29tbWEpLm1hcChOdW1iZXIpO1xuICAgICAgICBjb25zdCB1bmlxdWVXaW5uaW5nTnVtYmVyID0gbmV3IFNldCh3aW5uaW5nTnVtYmVyKTtcblxuICAgICAgICByZXR1cm4gdW5pcXVlV2lubmluZ051bWJlci5zaXplID09PSB3aW5uaW5nTnVtYmVyLmxlbmd0aDtcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICog7IKs7Jqp7J6Q7J2YIOyeheugpSDri7nssqgg67KI7Zi47JeQIOuMgO2VnCDsnKDtmqjshLEg6rKA7IKsIOyLpO2WiVxuICAgKiBAcGFyYW0ge3N0cmluZ30gaW5wdXRWYWx1ZSAtIOyCrOyaqeyekOydmCDsnoXroKUg6rCSXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgY2hlY2soaW5wdXRWYWx1ZSkge1xuICAgIHN0YXJ0VmFsaWRhdGlvbih0aGlzLnZhbGlkYXRpb25UeXBlcywgaW5wdXRWYWx1ZSk7XG4gIH0sXG5cbiAgY2hlY2tXaW5uaW5nTnVtYmVyKHdpbm5pbmdOdW1iZXIpIHtcbiAgICBzdGFydFZhbGlkYXRpb24odGhpcy52YWxpZGF0aW9uVHlwZXMsIHdpbm5pbmdOdW1iZXIuam9pbihTWU1CT0xTLmNvbW1hKSk7XG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgV2lubmluZ051bWJlclZhbGlkYXRvcjtcbiIsImltcG9ydCBMb3R0byBmcm9tICcuLi8uLi9kb21haW4vTG90dG8vTG90dG8uanMnO1xuXG5pbXBvcnQgeyBzdGFydFZhbGlkYXRpb24gfSBmcm9tICcuLi9zdGFydFZhbGlkYXRpb24uanMnO1xuXG5pbXBvcnQgeyBkZWVwRnJlZXplIH0gZnJvbSAnLi4vLi4vdXRpbHMvb2JqZWN0L29iamVjdC5qcyc7XG5cbmNvbnN0IHsgTE9UVE9fUlVMRSB9ID0gTG90dG87XG5cbi8qKlxuICogQG1vZHVsZSBCb251c051bWJlclZhbGlkYXRvclxuICogQHR5cGUge2ltcG9ydCgnLi4vLi4vdHlwZXMvanNEb2MuanMnKS5Cb251c051bWJlclZhbGlkYXRvcn1cbiAqIOuztOuEiOyKpCDrsojtmLgg7J6F66Cl7JeQIOuMgO2VnCDsnKDtmqjshLEg6rKA7IKs66W8IOyImO2Wie2VmOuKlCDrqqjrk4hcbiAqL1xuY29uc3QgQm9udXNOdW1iZXJWYWxpZGF0b3IgPSBkZWVwRnJlZXplKHtcbiAgdmFsaWRhdGlvblR5cGVzOiB7XG4gICAgLyoqXG4gICAgICogQHR5cGUge2ltcG9ydCgnLi4vLi4vdHlwZXMvanNEb2MuanMnKS5Cb251c051bWJlclZhbGlkYXRpb25UeXBlc31cbiAgICAgKi9cbiAgICBpc1R5cGVPZk51bWJlcjoge1xuICAgICAgZXJyb3JNZXNzYWdlOiAn67O064SI7IqkIOuyiO2YuOydmCDtmJXsi53snbQg7Jyg7Zqo7ZWY7KeAIOyViuyKteuLiOuLpC4g64uk7IucIOyeheugpe2VtCDso7zshLjsmpQuJyxcbiAgICAgIGlzVmFsaWQoeyBpbnB1dFZhbHVlIH0pIHtcbiAgICAgICAgY29uc3QgYm9udXNOdW1iZXIgPSBOdW1iZXIoaW5wdXRWYWx1ZSk7XG5cbiAgICAgICAgcmV0dXJuICFOdW1iZXIuaXNOYU4oYm9udXNOdW1iZXIpICYmIE51bWJlci5pc0ludGVnZXIoYm9udXNOdW1iZXIpICYmIGJvbnVzTnVtYmVyID49IDA7XG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBpc1ZhbGlkUmFuZ2U6IHtcbiAgICAgIGVycm9yTWVzc2FnZTogYOuztOuEiOyKpCDrsojtmLjripQgJHtMT1RUT19SVUxFLm1pbn0gfiAke0xPVFRPX1JVTEUubWF4fSDsgqzsnbTsl6zslbwg7ZWp64uI64ukLiDri6Tsi5wg7J6F66Cl7ZW0IOyjvOyEuOyalC5gLFxuICAgICAgaXNWYWxpZCh7IGlucHV0VmFsdWUgfSkge1xuICAgICAgICBjb25zdCBib251c051bWJlciA9IE51bWJlcihpbnB1dFZhbHVlKTtcblxuICAgICAgICByZXR1cm4gYm9udXNOdW1iZXIgPj0gTE9UVE9fUlVMRS5taW4gJiYgYm9udXNOdW1iZXIgPD0gTE9UVE9fUlVMRS5tYXg7XG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBpc1VuaXF1ZUJvbnVzTnVtYmVyOiB7XG4gICAgICBlcnJvck1lc3NhZ2U6ICfrs7TrhIjsiqQg67KI7Zi464qUIOuLueyyqCDrsojtmLjsl5Ag7Y+s7ZWo65CY7KeAIOyViuydgCDrsojtmLjsl6zslbwg7ZWp64uI64ukLiDri6Tsi5wg7J6F66Cl7ZW0IOyjvOyEuOyalC4nLFxuICAgICAgaXNWYWxpZCh7IGlucHV0VmFsdWUsIHdpbm5pbmdOdW1iZXIgfSkge1xuICAgICAgICBjb25zdCBib251c051bWJlciA9IE51bWJlcihpbnB1dFZhbHVlKTtcblxuICAgICAgICByZXR1cm4gIXdpbm5pbmdOdW1iZXIuaW5jbHVkZXMoYm9udXNOdW1iZXIpO1xuICAgICAgfSxcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiDsgqzsmqnsnpDsnZgg7J6F66ClIOuztOuEiOyKpCDrsojtmLjsl5Ag64yA7ZWcIOycoO2aqOyEsSDqsoDsgqwg7Iuk7ZaJXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dFZhbHVlIC0g7IKs7Jqp7J6Q7J2YIOyeheugpSDqsJJcbiAgICogQHBhcmFtIHtudW1iZXJbXX0gd2lubmluZ051bWJlciAtIOuLueyyqCDrsojtmLgg66qp66GdXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgY2hlY2soaW5wdXRWYWx1ZSwgd2lubmluZ051bWJlcikge1xuICAgIHN0YXJ0VmFsaWRhdGlvbih0aGlzLnZhbGlkYXRpb25UeXBlcywgeyBpbnB1dFZhbHVlLCB3aW5uaW5nTnVtYmVyIH0pO1xuICB9LFxuXG4gIGNoZWNrQm9udXNOdW1iZXIoYm9udXNOdW1iZXIsIHdpbm5pbmdOdW1iZXIpIHtcbiAgICBzdGFydFZhbGlkYXRpb24odGhpcy52YWxpZGF0aW9uVHlwZXMsIHsgaW5wdXRWYWx1ZTogU3RyaW5nKGJvbnVzTnVtYmVyKSwgd2lubmluZ051bWJlciB9KTtcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBCb251c051bWJlclZhbGlkYXRvcjtcbiIsImltcG9ydCBCYXNlQ29tcG9uZW50IGZyb20gJy4uL0Jhc2VDb21wb25lbnQvQmFzZUNvbXBvbmVudC5qcyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9XaW5uaW5nRGV0YWlsRm9ybS5tb2R1bGUuY3NzJztcblxuaW1wb3J0IExvdHRvIGZyb20gJy4uLy4uLy4uL2RvbWFpbi9Mb3R0by9Mb3R0by5qcyc7XG5cbmltcG9ydCBXaW5uaW5nUmVzdWx0U2VydmljZSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlL1dpbm5pbmdSZXN1bHRTZXJ2aWNlLmpzJztcblxuaW1wb3J0IEFwcEVycm9yIGZyb20gJy4uLy4uLy4uL2Vycm9ycy9BcHBFcnJvci9BcHBFcnJvci5qcyc7XG5cbmltcG9ydCB7IEJvbnVzTnVtYmVyVmFsaWRhdG9yLCBXaW5uaW5nTnVtYmVyVmFsaWRhdG9yIH0gZnJvbSAnLi4vLi4vLi4vdmFsaWRhdG9yL2luZGV4LmpzJztcblxuaW1wb3J0IHsgcmVtb3ZlRXJyb3JNZXNzYWdlLCBzaG93RXJyb3JNZXNzYWdlIH0gZnJvbSAnLi4vLi4vdXRpbHMvZXJyb3JNZXNzYWdlLmpzJztcbmltcG9ydCB7ICQgfSBmcm9tICcuLi8uLi91dGlscy9kb20uanMnO1xuXG5pbXBvcnQgeyBDT01QT05FTlRfU0VMRUNUT1IsIENVU1RPTV9FVkVOVF9UWVBFIH0gZnJvbSAnLi4vLi4vLi4vY29uc3RhbnRzL3dlYkFwcGxpY2F0aW9uLmpzJztcblxuY29uc3QgeyBMT1RUT19SVUxFIH0gPSBMb3R0bztcblxuY2xhc3MgV2lubmluZ0RldGFpbEZvcm0gZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHRoaXMuaW5uZXJIVE1MID0gYFxuICAgICAgICA8Zm9ybSBpZD1cIndpbm5pbmctZGV0YWlsLWZvcm1cIiBjbGFzcz1cIiR7c3R5bGVzLndpbm5pbmdEZXRhaWxGb3JtfVwiPlxuICAgICAgICAgIDxwIGNsYXNzPVwiYm9keVwiPuyngOuCnCDso7wg64u57LKo67KI7Zi4ICR7XG4gICAgICAgICAgICBMT1RUT19SVUxFLmNvdW50XG4gICAgICAgICAgfeqwnOyZgCDrs7TrhIjsiqQg67KI7Zi4IDHqsJzrpbwg7J6F66Cl7ZW07KO87IS47JqULjwvcD5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiJHtzdHlsZXMubnVtYmVyc0lucHV0Q29udGFpbmVyfVwiPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cIndpbm5pbmctbnVtYmVyLWlucHV0LTFcIiBjbGFzcz1cImJvZHlcIj7ri7nssqgg67KI7Zi4PC9sYWJlbD5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ke3N0eWxlcy53aW5uaW5nTnVtYmVySW5wdXRDb250YWluZXJ9PlxuICAgICAgICAgICAgICAgICR7dGhpcy4jY3JlYXRlTnVtYmVySW5wdXRCeUNvdW50KExPVFRPX1JVTEUuY291bnQpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0ke3N0eWxlcy5ib251c051bWJlckNvbnRhaW5lcn0+XG4gICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJib251cy1udW1iZXItaW5wdXRcIiBjbGFzcz1cImJvZHlcIj7rs7TrhIjsiqQg67KI7Zi4PC9sYWJlbD5cbiAgICAgICAgICAgICAgJHt0aGlzLiNjcmVhdGVOdW1iZXJJbnB1dEJ5Q291bnQoMSwgeyBpc0JvbnVzTnVtYmVyOiB0cnVlIH0pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY2xhc3M9XCIke3N0eWxlcy5zdWJtaXRCdXR0b259IGNhcHRpb25cIj7qsrDqs7wg7ZmV7J247ZWY6riwPC9idXR0b24+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgIGA7XG4gIH1cblxuICAjY3JlYXRlTnVtYmVySW5wdXRCeUNvdW50KGNvdW50LCB7IGlzQm9udXNOdW1iZXIgfSA9IHsgaXNCb251c051bWJlcjogZmFsc2UgfSkge1xuICAgIGlmIChpc0JvbnVzTnVtYmVyKSB7XG4gICAgICByZXR1cm4gYDxpbnB1dCBpZD1cImJvbnVzLW51bWJlci1pbnB1dFwiIHR5cGU9XCJudW1iZXJcIiBjbGFzcz1cIiR7c3R5bGVzLm51bWJlcklucHV0fSBib251cy1udW1iZXJcIi8+YDtcbiAgICB9XG5cbiAgICByZXR1cm4gQXJyYXkuZnJvbSh7IGxlbmd0aDogY291bnQgfSwgKF8sIGluZGV4KSA9PiB7XG4gICAgICBjb25zdCBpZCA9IGB3aW5uaW5nLW51bWJlci1pbnB1dC0ke2luZGV4ICsgMX1gO1xuXG4gICAgICByZXR1cm4gYDxpbnB1dCBpZD1cIiR7aWR9XCIgdHlwZT1cIm51bWJlclwiIGNsYXNzPVwiJHtzdHlsZXMubnVtYmVySW5wdXR9IHdpbm5pbmctbnVtYmVyXCIvPmA7XG4gICAgfSkuam9pbignJyk7XG4gIH1cblxuICByZW1vdmVFdmVudCgpIHtcbiAgICB0aGlzLm9mZihcbiAgICAgIHsgdGFyZ2V0OiBkb2N1bWVudCwgZXZlbnROYW1lOiBDVVNUT01fRVZFTlRfVFlQRS5idXlMb3R0b1ByaWNlIH0sXG4gICAgICB0aGlzLiNoYW5kbGVSZW5kZXJXaW5uaW5nRGV0YWlsRm9ybS5iaW5kKHRoaXMpLFxuICAgICk7XG5cbiAgICB0aGlzLm9mZihcbiAgICAgIHsgdGFyZ2V0OiAkKHRoaXMsIENPTVBPTkVOVF9TRUxFQ1RPUi53aW5uaW5nRGV0YWlsRm9ybSksIGV2ZW50TmFtZTogJ3N1Ym1pdCcgfSxcbiAgICAgIHRoaXMuI2hhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpLFxuICAgICk7XG4gIH1cblxuICBzZXRFdmVudCgpIHtcbiAgICB0aGlzLm9uKFxuICAgICAgeyB0YXJnZXQ6IGRvY3VtZW50LCBldmVudE5hbWU6IENVU1RPTV9FVkVOVF9UWVBFLmJ1eUxvdHRvUHJpY2UgfSxcbiAgICAgIHRoaXMuI2hhbmRsZVJlbmRlcldpbm5pbmdEZXRhaWxGb3JtLmJpbmQodGhpcyksXG4gICAgKTtcblxuICAgIHRoaXMub24oXG4gICAgICB7IHRhcmdldDogJCh0aGlzLCBDT01QT05FTlRfU0VMRUNUT1Iud2lubmluZ0RldGFpbEZvcm0pLCBldmVudE5hbWU6ICdzdWJtaXQnIH0sXG4gICAgICB0aGlzLiNoYW5kbGVTdWJtaXQuYmluZCh0aGlzKSxcbiAgICApO1xuICB9XG5cbiAgI2hhbmRsZVJlbmRlcldpbm5pbmdEZXRhaWxGb3JtKCkge1xuICAgIHRoaXMuI2luaXRXaW5uaW5nRGV0YWlsSW5wdXRzKCk7XG5cbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NlJyk7XG5cbiAgICB0aGlzLiNmb2N1c0ZpcnN0V2lubmluZ051bWJlcklucHV0KCk7XG4gIH1cblxuICAjaW5pdFdpbm5pbmdEZXRhaWxJbnB1dHMoKSB7XG4gICAgdGhpcy5xdWVyeVNlbGVjdG9yQWxsKENPTVBPTkVOVF9TRUxFQ1RPUi53aW5uaW5nTnVtYmVySW5wdXRzKS5mb3JFYWNoKFxuICAgICAgKHdpbm5pbmdOdW1iZXJJbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgICAgd2lubmluZ051bWJlcklucHV0RWxlbWVudC52YWx1ZSA9ICcnO1xuICAgICAgfSxcbiAgICApO1xuXG4gICAgJCh0aGlzLCBDT01QT05FTlRfU0VMRUNUT1IuYm9udXNOdW1iZXJJbnB1dCkudmFsdWUgPSAnJztcbiAgfVxuXG4gICNmb2N1c0ZpcnN0V2lubmluZ051bWJlcklucHV0KCkge1xuICAgIGNvbnN0IHdpbm5pbmdOdW1iZXJJbnB1dEVsZW1lbnRMaXN0ID0gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgQ09NUE9ORU5UX1NFTEVDVE9SLndpbm5pbmdOdW1iZXJJbnB1dHMsXG4gICAgKTtcblxuICAgIGlmIChcbiAgICAgIHdpbm5pbmdOdW1iZXJJbnB1dEVsZW1lbnRMaXN0ICYmXG4gICAgICB3aW5uaW5nTnVtYmVySW5wdXRFbGVtZW50TGlzdFswXSBpbnN0YW5jZW9mIEhUTUxJbnB1dEVsZW1lbnRcbiAgICApIHtcbiAgICAgIHdpbm5pbmdOdW1iZXJJbnB1dEVsZW1lbnRMaXN0WzBdLmZvY3VzKCk7XG4gICAgfVxuICB9XG5cbiAgI2hhbmRsZVN1Ym1pdChldmVudCkge1xuICAgIHRyeSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiNjcmVhdGVXaW5uaW5nUmVzdWx0UGFyYW1zKCk7XG4gICAgICBjb25zdCB7IHdpbm5pbmdSYW5rUmVzdWx0LCByYXRlT2ZSZXR1cm4gfSA9IFdpbm5pbmdSZXN1bHRTZXJ2aWNlLmNyZWF0ZVdpbm5pbmdSZXN1bHQocGFyYW1zKTtcblxuICAgICAgcmVtb3ZlRXJyb3JNZXNzYWdlKHRoaXMpO1xuXG4gICAgICB0aGlzLmVtaXQoQ1VTVE9NX0VWRU5UX1RZUEUub3Blbk1vZGFsLCB7IHdpbm5pbmdSYW5rUmVzdWx0LCByYXRlT2ZSZXR1cm4gfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEFwcEVycm9yKSB7XG4gICAgICAgIGNvbnN0IG5vblByZWZpeEVycm9yTWVzc2FnZSA9IGVycm9yLm1lc3NhZ2UucmVwbGFjZShBcHBFcnJvci5QUkVGSVgsICcnKTtcbiAgICAgICAgc2hvd0Vycm9yTWVzc2FnZShub25QcmVmaXhFcnJvck1lc3NhZ2UsIENPTVBPTkVOVF9TRUxFQ1RPUi53aW5uaW5nRGV0YWlsRm9ybSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgI2NyZWF0ZVdpbm5pbmdSZXN1bHRQYXJhbXMoKSB7XG4gICAgY29uc3QgeyB3aW5uaW5nTnVtYmVyLCBib251c051bWJlciB9ID0gdGhpcy4jY3JlYXRlV2lubmluZ0RldGFpbCgpO1xuXG4gICAgY29uc3QgeyBidXlMb3R0b1ByaWNlLCBsb3R0b051bWJlcnMgfSA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihDT01QT05FTlRfU0VMRUNUT1IucHVyY2hhc2VkTG90dG9TZWN0aW9uKVxuICAgICAgLmdldEJ1eUxvdHRvRGV0YWlscygpO1xuXG4gICAgcmV0dXJuIHsgd2lubmluZ051bWJlciwgYm9udXNOdW1iZXIsIGJ1eUxvdHRvUHJpY2UsIGxvdHRvTnVtYmVycyB9O1xuICB9XG5cbiAgI2NyZWF0ZVdpbm5pbmdEZXRhaWwoKSB7XG4gICAgY29uc3Qgd2lubmluZ051bWJlciA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoQ09NUE9ORU5UX1NFTEVDVE9SLndpbm5pbmdOdW1iZXJJbnB1dHMpLFxuICAgICAgKGlucHV0KSA9PiBpbnB1dC52YWx1ZSxcbiAgICApXG4gICAgICAuZmlsdGVyKChpbnB1dCkgPT4gaW5wdXQgIT09ICcnKVxuICAgICAgLm1hcChOdW1iZXIpO1xuICAgIGNvbnN0IGJvbnVzTnVtYmVyID0gTnVtYmVyKCQodGhpcywgQ09NUE9ORU5UX1NFTEVDVE9SLmJvbnVzTnVtYmVySW5wdXQpPy52YWx1ZSk7XG5cbiAgICBXaW5uaW5nTnVtYmVyVmFsaWRhdG9yLmNoZWNrV2lubmluZ051bWJlcih3aW5uaW5nTnVtYmVyKTtcbiAgICBCb251c051bWJlclZhbGlkYXRvci5jaGVja0JvbnVzTnVtYmVyKGJvbnVzTnVtYmVyLCB3aW5uaW5nTnVtYmVyKTtcblxuICAgIHJldHVybiB7IHdpbm5pbmdOdW1iZXIsIGJvbnVzTnVtYmVyIH07XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCd3aW5uaW5nLWRldGFpbC1mb3JtJywgV2lubmluZ0RldGFpbEZvcm0pO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1dpbm5pbmdTdGF0aXN0aWNzTW9kYWwubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vV2lubmluZ1N0YXRpc3RpY3NNb2RhbC5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IEJhc2VDb21wb25lbnQgZnJvbSAnLi4vQmFzZUNvbXBvbmVudC9CYXNlQ29tcG9uZW50LmpzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9XaW5uaW5nU3RhdGlzdGljc01vZGFsLm1vZHVsZS5jc3MnO1xuXG5pbXBvcnQgeyBSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yLCBXaW5uaW5nUmFuayB9IGZyb20gJy4uLy4uLy4uL2RvbWFpbi9pbmRleC5qcyc7XG5cbmltcG9ydCB7IENPTVBPTkVOVF9TRUxFQ1RPUiwgQ1VTVE9NX0VWRU5UX1RZUEUgfSBmcm9tICcuLi8uLi8uLi9jb25zdGFudHMvd2ViQXBwbGljYXRpb24uanMnO1xuXG5pbXBvcnQgeyAkIH0gZnJvbSAnLi4vLi4vdXRpbHMvZG9tLmpzJztcblxuY2xhc3MgV2lubmluZ1N0YXRpc3RpY3NNb2RhbCBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuICAjcmF0ZU9mUmV0dXJuO1xuXG4gICN3aW5uaW5nUmFua1Jlc3VsdDtcblxuICByZW5kZXIoKSB7XG4gICAgdGhpcy5pbm5lckhUTUwgPSBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCIke3N0eWxlcy5tb2RhbElubmVyfVwiPlxuICAgICAgICAgICAgPGJ1dHRvbiBpZD1cIm1vZGFsLWNsb3NlLWJ1dHRvblwiIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cIiR7c3R5bGVzLm1vZGFsQ2xvc2VCdXR0b259XCI+XG4gICAgICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDQwIDQwXCI+XG4gICAgICAgICAgICAgICAgICAgIDxwYXRoIGNsYXNzPVwiJHtcbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZXMubW9kYWxDbG9zZUljb25cbiAgICAgICAgICAgICAgICAgICAgfVwiIGQ9XCJNIDEwLDEwIEwgMzAsMzAgTSAzMCwxMCBMIDEwLDMwXCI+PC9wYXRoPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8aDIgY2xhc3M9XCIke3N0eWxlcy50ZXh0Q2VudGVyfSAke3N0eWxlcy50aXRsZX0gc3VidGl0bGVcIj7wn4+GIOuLueyyqCDthrXqs4Qg8J+PhjwvaDI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiJHtzdHlsZXMudGFibGVDb250YWluZXJ9XCI+XG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwiJHtzdHlsZXMucmVzdWx0VGFibGV9XCI+XG4gICAgICAgICAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cIiR7c3R5bGVzLnRleHRDZW50ZXJ9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGg+7J287LmYIOqwr+yImDwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGg+64u57LKo6riIPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD7ri7nssqgg6rCv7IiYPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cIiR7c3R5bGVzLnRleHRDZW50ZXJ9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtXaW5uaW5nUmFuay5SQU5LX1JVTEVbJzV0aCddLm1hdGNofeqwnDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yLldJTk5JTkdfUFJJWkVfREVUQUlMW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnNXRoJ1xuICAgICAgICAgICAgICAgICAgICAgICAgXS50b0xvY2FsZVN0cmluZygpfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI3dpbm5pbmdSYW5rUmVzdWx0ID8gdGhpcy4jd2lubmluZ1JhbmtSZXN1bHRbJzV0aCddIDogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH08L3NwYW4+6rCcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cIiR7c3R5bGVzLnRleHRDZW50ZXJ9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtXaW5uaW5nUmFuay5SQU5LX1JVTEVbJzR0aCddLm1hdGNofeqwnDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yLldJTk5JTkdfUFJJWkVfREVUQUlMW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnNHRoJ1xuICAgICAgICAgICAgICAgICAgICAgICAgXS50b0xvY2FsZVN0cmluZygpfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI3dpbm5pbmdSYW5rUmVzdWx0ID8gdGhpcy4jd2lubmluZ1JhbmtSZXN1bHRbJzR0aCddIDogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH08L3NwYW4+6rCcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cIiR7c3R5bGVzLnRleHRDZW50ZXJ9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtXaW5uaW5nUmFuay5SQU5LX1JVTEVbJzNyZCddLm1hdGNofeqwnDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yLldJTk5JTkdfUFJJWkVfREVUQUlMW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnM3JkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgXS50b0xvY2FsZVN0cmluZygpfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI3dpbm5pbmdSYW5rUmVzdWx0ID8gdGhpcy4jd2lubmluZ1JhbmtSZXN1bHRbJzNyZCddIDogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH08L3NwYW4+6rCcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cIiR7c3R5bGVzLnRleHRDZW50ZXJ9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtXaW5uaW5nUmFuay5SQU5LX1JVTEVbJzJuZCddLm1hdGNofeqwnCArIOuztOuEiOyKpOuzvDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yLldJTk5JTkdfUFJJWkVfREVUQUlMW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnMm5kJ1xuICAgICAgICAgICAgICAgICAgICAgICAgXS50b0xvY2FsZVN0cmluZygpfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI3dpbm5pbmdSYW5rUmVzdWx0ID8gdGhpcy4jd2lubmluZ1JhbmtSZXN1bHRbJzJuZCddIDogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH08L3NwYW4+6rCcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cIiR7c3R5bGVzLnRleHRDZW50ZXJ9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtXaW5uaW5nUmFuay5SQU5LX1JVTEVbJzFzdCddLm1hdGNofeqwnDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtSYXRlT2ZSZXR1cm5DYWxjdWxhdG9yLldJTk5JTkdfUFJJWkVfREVUQUlMW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnMXN0J1xuICAgICAgICAgICAgICAgICAgICAgICAgXS50b0xvY2FsZVN0cmluZygpfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI3dpbm5pbmdSYW5rUmVzdWx0ID8gdGhpcy4jd2lubmluZ1JhbmtSZXN1bHRbJzFzdCddIDogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH08L3NwYW4+6rCcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8cCBjbGFzcz1cIiR7c3R5bGVzLnJhdGVPZlJldHVybk1lc3NhZ2V9XCI+XG4gICAgICAgICAgICAgICAg64u57Iug7J2YIOy0nSDsiJjsnbXrpaDsnYAgPHNwYW4+JHt0aGlzLiNyYXRlT2ZSZXR1cm4gPz8gMH08L3NwYW4+JSDsnoXri4jri6QuXG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8YnV0dG9uIGlkPVwicmVzZXQtYnV0dG9uXCIgdHlwZT1cInJlc2V0XCIgY2xhc3M9XCIke1xuICAgICAgICAgICAgICBzdHlsZXMucmVzZXRCdXR0b25cbiAgICAgICAgICAgIH0gY2FwdGlvblwiPuuLpOyLnCDsi5zsnpHtlZjquLA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgYDtcbiAgfVxuXG4gIHJlbW92ZUV2ZW50KCkge1xuICAgIHRoaXMub2ZmKFxuICAgICAgeyB0YXJnZXQ6IGRvY3VtZW50LCBldmVudE5hbWU6IENVU1RPTV9FVkVOVF9UWVBFLm9wZW5Nb2RhbCB9LFxuICAgICAgdGhpcy4jaGFuZGxlT3Blbk1vZGFsLmJpbmQodGhpcyksXG4gICAgKTtcblxuICAgIHRoaXMub2ZmKFxuICAgICAgeyB0YXJnZXQ6ICQodGhpcywgQ09NUE9ORU5UX1NFTEVDVE9SLm1vZGFsQ2xvc2VCdXR0b24pLCBldmVudE5hbWU6ICdjbGljaycgfSxcbiAgICAgIHRoaXMuI2hhbmRsZUNsb3NlTW9kYWwuYmluZCh0aGlzKSxcbiAgICApO1xuXG4gICAgdGhpcy5vZmYoXG4gICAgICB7IHRhcmdldDogJCh0aGlzLCBDT01QT05FTlRfU0VMRUNUT1IucmVzZXRCdXR0b24pLCBldmVudE5hbWU6ICdjbGljaycgfSxcbiAgICAgIHRoaXMuI2hhbmRsZURpc3BhdGNoUmVzZXRFdmVudC5iaW5kKHRoaXMpLFxuICAgICk7XG4gIH1cblxuICBzZXRFdmVudCgpIHtcbiAgICB0aGlzLm9uKFxuICAgICAgeyB0YXJnZXQ6IGRvY3VtZW50LCBldmVudE5hbWU6IENVU1RPTV9FVkVOVF9UWVBFLm9wZW5Nb2RhbCB9LFxuICAgICAgdGhpcy4jaGFuZGxlT3Blbk1vZGFsLmJpbmQodGhpcyksXG4gICAgKTtcblxuICAgIHRoaXMub24oXG4gICAgICB7IHRhcmdldDogJCh0aGlzLCBDT01QT05FTlRfU0VMRUNUT1IubW9kYWxDbG9zZUJ1dHRvbiksIGV2ZW50TmFtZTogJ2NsaWNrJyB9LFxuICAgICAgdGhpcy4jaGFuZGxlQ2xvc2VNb2RhbC5iaW5kKHRoaXMpLFxuICAgICk7XG5cbiAgICB0aGlzLm9uKFxuICAgICAgeyB0YXJnZXQ6ICQodGhpcywgQ09NUE9ORU5UX1NFTEVDVE9SLnJlc2V0QnV0dG9uKSwgZXZlbnROYW1lOiAnY2xpY2snIH0sXG4gICAgICB0aGlzLiNoYW5kbGVEaXNwYXRjaFJlc2V0RXZlbnQuYmluZCh0aGlzKSxcbiAgICApO1xuICB9XG5cbiAgI2hhbmRsZU9wZW5Nb2RhbChldmVudCkge1xuICAgIGNvbnN0IHsgcmF0ZU9mUmV0dXJuLCB3aW5uaW5nUmFua1Jlc3VsdCB9ID0gZXZlbnQuZGV0YWlsO1xuXG4gICAgdGhpcy4jcmF0ZU9mUmV0dXJuID0gcmF0ZU9mUmV0dXJuO1xuICAgIHRoaXMuI3dpbm5pbmdSYW5rUmVzdWx0ID0gd2lubmluZ1JhbmtSZXN1bHQ7XG5cbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NlJyk7XG5cbiAgICB0aGlzLmNvbm5lY3RlZENhbGxiYWNrKCk7XG4gIH1cblxuICAjaGFuZGxlQ2xvc2VNb2RhbCgpIHtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2Nsb3NlJyk7XG4gIH1cblxuICAjaGFuZGxlRGlzcGF0Y2hSZXNldEV2ZW50KCkge1xuICAgIHRoaXMuZW1pdChDVVNUT01fRVZFTlRfVFlQRS5yZXNldCk7XG4gIH1cbn1cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCd3aW5uaW5nLXN0YXRpc3RpY3MtbW9kYWwnLCBXaW5uaW5nU3RhdGlzdGljc01vZGFsKTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImxvY2FscyIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJDVVNUT01fRVZFTlRfVFlQRSIsImZyZWV6ZSIsImJ1eUxvdHRvUHJpY2UiLCJvcGVuTW9kYWwiLCJyZXNldCIsIkNPTVBPTkVOVF9TRUxFQ1RPUiIsImVycm9yTWVzc2FnZSIsInB1cmNoYXNlZExvdHRvRm9ybSIsInB1cmNoYXNlZExvdHRvSW5wdXQiLCJ3aW5uaW5nRGV0YWlsRm9ybSIsIndpbm5pbmdOdW1iZXJJbnB1dHMiLCJib251c051bWJlcklucHV0IiwicHVyY2hhc2VkTG90dG9TZWN0aW9uIiwibW9kYWxDbG9zZUJ1dHRvbiIsInJlc2V0QnV0dG9uIiwicmVuZGVyIiwic2V0RXZlbnQiLCJyZW1vdmVFdmVudCIsImV2ZW50VHlwZSIsImRldGFpbCIsImN1c3RvbUV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJidWJibGVzIiwiZGlzcGF0Y2hFdmVudCIsImV2ZW50SGFuZGxlciIsImV2ZW50TmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiSFRNTEVsZW1lbnQiLCJMb3R0b0FwcCIsImlubmVySFRNTCIsInN0eWxlcyIsIm9uIiwiYmluZCIsIm9mZiIsIkJhc2VDb21wb25lbnQiLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSIsImRlZXBGcmVlemUiLCJvYmplY3QiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZm9yRWFjaCIsIm5hbWUiLCJ2YWx1ZSIsInNodWZmbGUiLCJtYXhWYWx1ZSIsInNlbGVjdGFibGVOdW1iZXJzIiwiQXJyYXkiLCJmcm9tIiwiXyIsInNodWZmbGVkQXJyYXkiLCJyYW5kb21JbmRleCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInJhbmRvbVZhbHVlSW5BcnJheSIsInBpY2tVbmlxdWVOdW1iZXJzSW5SYW5nZSIsImVuZCIsInNsaWNlIiwiTG90dG8iLCJSYW5kb20iLCJzdGFydCIsIkxPVFRPX1JVTEUiLCJtaW4iLCJtYXgiLCJzb3J0IiwibnVtYmVyQSIsIm51bWJlckIiLCJMb3R0b0J1eWVyIiwibG90dG9Db3VudCIsIkxPVFRPX1BSSUNFX1BFUl9VTklUIiwiY3JlYXRlTnVtYmVyIiwiQXBwRXJyb3IiLCJtZXNzYWdlIiwiUFJFRklYIiwic3RhcnRWYWxpZGF0aW9uIiwidmFsaWRhdGlvblR5cGVzIiwidmFsdWVzIiwiaXNWYWxpZCIsIkJVWV9MT1RUT19QUklDRV9SQU5HRSIsImlzVHlwZU9mTnVtYmVyIiwiaW5wdXRWYWx1ZSIsIk51bWJlciIsImlzTmFOIiwiaXNJbnRlZ2VyIiwib3V0T2ZSYW5nZSIsInRvTG9jYWxlU3RyaW5nIiwiYW1vdW50Iiwibm90SW5UaG91c2FuZFVuaXQiLCJjaGVjayIsIiQiLCJzZWxlY3RvciIsInNob3dFcnJvck1lc3NhZ2UiLCJ0YXJnZXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlRWxlbWVudCIsInVwZGF0ZUVycm9yTWVzc2FnZSIsInRhcmdldFNlbGVjdG9yIiwicGFyYWdyYXBoRWxlbWVudCIsInRleHRFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiY3JlYXRlRXJyb3JNZXNzYWdlIiwiY29tbWl0TmV3RXJyb3JNZXNzYWdlIiwicmVtb3ZlRXJyb3JNZXNzYWdlIiwiUHVyY2hhc2VkTG90dG9Gb3JtIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInB1cmNoYXNlZExvdHRvUHJpY2UiLCJCdXlMb3R0b1ByaWNlVmFsaWRhdG9yIiwiZW1pdCIsImVycm9yIiwibm9uUHJlZml4RXJyb3JNZXNzYWdlIiwicmVwbGFjZSIsInB1cmNoYXNlZExvdHRvSW5wdXRFbGVtZW50IiwiUHVyY2hhc2VkTG90dG8iLCJsb3R0b051bWJlciIsImNyZWF0ZUxvdHRvTnVtYmVycyIsInB1cmNoYXNlIiwiUHVyY2hhc2VkTG90dG9TZWN0aW9uIiwibG90dG9OdW1iZXJzIiwiY29ubmVjdGVkQ2FsbGJhY2siLCJCdXlMb3R0b1NlcnZpY2UiLCJyZWR1Y2UiLCJwcmV2TG90dG9zVGVtcGxhdGUiLCJsb3R0b0VsZW1lbnQiLCJnZXRUZW1wbGF0ZSIsIlJhdGVPZlJldHVybkNhbGN1bGF0b3IiLCJ3aW5uaW5nUmFua1Jlc3VsdCIsInRvdGFsUHJpemUiLCJrZXlzIiwidG90YWwiLCJyYW5rIiwiV0lOTklOR19QUklaRV9ERVRBSUwiLCJ0b0ZpeGVkIiwiV2lubmluZ1JhbmsiLCJ3aW5uaW5nTnVtYmVyIiwiYm9udXNOdW1iZXIiLCJwcmV2V2lubmluZ1JhbmtEZXRhaWwiLCJtYXRjaENvdW50IiwidGFyZ2V0UmFua1J1bGUiLCJlbnRyaWVzIiwiUkFOS19SVUxFIiwiZmluZCIsIm1hdGNoIiwiaGFzQm9udXMiLCJ3aW5uaW5nTnVtYmVyU2V0IiwiU2V0IiwibnVtYmVyIiwiaGFzIiwiaW5jbHVkZXMiLCJkZXNjcmlwdGlvbiIsImNyZWF0ZVdpbm5pbmdSZXN1bHQiLCJjYWxjdWxhdGVSYW5rIiwicmF0ZU9mUmV0dXJuIiwiZXhlY3V0ZSIsIlNZTUJPTFMiLCJlbXB0eVN0cmluZyIsInNwYWNlIiwiY29tbWEiLCJlbXB0eVZhbHVlcyIsIklOUFVUX0xPVFRPX05VTUJFUl9SRUdFWFAiLCJpc1ZhbGlkVHlwZSIsInRlc3QiLCJpc1ZhbGlkTGVuZ3RoIiwic3BsaXQiLCJpc1ZhbGlkUmFuZ2UiLCJldmVyeSIsImlzVW5pcXVlIiwic2l6ZSIsImNoZWNrV2lubmluZ051bWJlciIsImlzVW5pcXVlQm9udXNOdW1iZXIiLCJjaGVja0JvbnVzTnVtYmVyIiwiU3RyaW5nIiwiV2lubmluZ0RldGFpbEZvcm0iLCJpc0JvbnVzTnVtYmVyIiwicXVlcnlTZWxlY3RvckFsbCIsIndpbm5pbmdOdW1iZXJJbnB1dEVsZW1lbnQiLCJ3aW5uaW5nTnVtYmVySW5wdXRFbGVtZW50TGlzdCIsIkhUTUxJbnB1dEVsZW1lbnQiLCJmb2N1cyIsInBhcmFtcyIsIldpbm5pbmdSZXN1bHRTZXJ2aWNlIiwiZ2V0QnV5TG90dG9EZXRhaWxzIiwiaW5wdXQiLCJmaWx0ZXIiLCJXaW5uaW5nTnVtYmVyVmFsaWRhdG9yIiwiQm9udXNOdW1iZXJWYWxpZGF0b3IiLCJXaW5uaW5nU3RhdGlzdGljc01vZGFsIl0sInNvdXJjZVJvb3QiOiIifQ==